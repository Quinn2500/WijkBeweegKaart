@{
    Layout = "";
}

@using DataModels
@using DataModels.Questions
@using WBK.Models.Create
@model WBK.Models.Create.SurveyViewModel

<!DOCTYPE html>
<html style="height: 100%; overflow-y: scroll; overflow-x: hidden">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>WijkBeweegKaart</title>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.js"></script>
    
    <environment include="Development">
        <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    </environment>

    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link href="~/lib/jqeury-ui/jquery-ui.css" rel="stylesheet" />
    <script src="~/lib/jqeury-ui/jquery-ui.min.js"></script>
    <script src="~/lib/jquery.appear-master/index.js"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
</head>

<body class="p-0" style="height: 100%;">
    <nav class="navbar navbar-light" style="background-color: #F9A11B;">
        <a class="navbar-brand" href="#">
            <img src="~/images/WijkBeweegKaart Logo.png" alt="WijkBeweegKaart" style="height: 80px; width: 360px;" />
        </a>
        <h3 id="pageCounter">Pagina: 0/0</h3>
    </nav>

<div class="container-fluid p-0 row h-75">

        <div id="overview" class="col-12 my-auto justify-content-center text-center" style="overflow: visible">
            @using (Html.BeginForm("Survey", "Survey", FormMethod.Post, new { @class = "" }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(x => x.Title, new {value= Model.Title})

                <div id="introDiv">
                    <div class="pageText w-50" style="margin-left: 25%">

                        <h1>@Html.DisplayTextFor(x => x.Title)</h1>
                        <p>@Model.Description<p>
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img src="@Model.ImageUrl" style='height: 200px; width: 200px; object-fit: contain'/>
                        }

                    </div>

                </div>
                for (int i = 0; i < Model.PagesList.Count; i++)
                {
                    PageViewModel pageView = Model.PagesList[i];
                    Model.PagesList[i] = pageView;
                    <div class="pageDivSurvey" style="display: none">
                        <div class="pageText w-50" style="margin-left: 25%">

                            <h2>@pageView.Title</h2>
                            @if (!string.IsNullOrEmpty(pageView.ImageUrl))
                            {
                                <img src="@pageView.ImageUrl" width="400" height="400" style="object-fit: none;"/>
                            }
                            <p>@pageView.Description</p>

                        </div>
                    </div>

                    <div id="pageDiv@(i)" class="questionDivSurvey"  style="display: none; margin-top:20px;">
                        @for (int j = 0; j < pageView.Questions.Count; j++)
                        {
                        <div class="question">
                            @{ QuestionViewModel questionView = pageView.Questions[j]; }
                            <h3 name="name">@questionView.Title</h3>
                            @if (!string.IsNullOrEmpty(questionView.ImageUrl))
                            {
                                <img src="@questionView.ImageUrl" width="400" height="400" style="object-fit: none;" />
                            }
                            <p>@questionView.Description</p>
                            @switch (questionView.Type)
                            {
                                case TypeEnum.OpenVraag:
                                    @Html.TextBoxFor(x => x.PagesList[i].Questions[j].TextAnswer, new { @class = "form-control" })
                                    break;
                                case TypeEnum.SliderVraag:
                                    <label>@Model.PagesList[i].Questions[j].SliderMinText</label>
                                    @Html.TextBoxFor(x => x.PagesList[i].Questions[j].NumberAnswer, new { type = "range", min = 0, max = Model.PagesList[i].Questions[j].SliderScaleVal, @class = "form-control" })
                                    <label>@Model.PagesList[i].Questions[j].SliderMaxText</label>
                                    break;
                                case TypeEnum.NummerVraag:
                                    @Html.TextBoxFor(x => x.PagesList[i].Questions[j].NumberAnswer, new { type = "number", min = Model.PagesList[i].Questions[j].MinValue, max = Model.PagesList[i].Questions[j].MaxValue, @class = "form-control" })
                                    break;
                                case TypeEnum.MeerkeuzeVraag:
                                    <div class="multipleChoiceList">
                                        @for (int q = 0; q < Model.PagesList[i].Questions[j].Options.Count; q++)
                                        {
                                            <div class="multipleChoiceElement">
                                                @Html.CheckBoxFor(x => x.PagesList[i].Questions[j].Options[q].Selected, new {@class = "multipleChoice"+j })
                                                <label>@Model.PagesList[i].Questions[j].Options[q].Answer</label>
                                                @if (!string.IsNullOrEmpty(Model.PagesList[i].Questions[j].Options[q].ImageUrl))
                                                {
                                                    <img src="@Model.PagesList[i].Questions[j].Options[q].ImageUrl" width="150" height="150" style="object-fit: none;" />
                                                }
                                                <p>@Model.PagesList[i].Questions[j].Options[q].Description</p>
                                            </div>
                                        }
                                    </div>
                                    <script>
                                        $('.multipleChoice'+@j).on('change', function(){
                                            var noChecked = 0;
                                            $.each($('.multipleChoice'+@j), function(){
                                                if($(this).is(':checked')){
                                                    noChecked++;    
                                                }
                                            });
                                            if(noChecked >= @Model.PagesList[i].Questions[j].MaximumNumberOfAnswers){
                                                $.each($('.multipleChoice'+@j), function(){
                                                    if($(this).not(':checked').length == 1){
                                                        $(this).attr('disabled','disabled');    
                                                    }
                                                });
                                            }else{
                                                $('.multipleChoice'+@j).removeAttr('disabled');    
                                            };
                                        });
                                    </script>


                                    break;
                                case TypeEnum.GeoVraag:

                                        <div id="page@(i)_question@(j)" class="geoDraw">
                                            @switch (Model.PagesList[i].Questions[j].GeoType)
                                            {
                                                case GeoTypeEnum.Marker:
                                                    <button type="button" class="btn btn-primary btn-sm drawMarker">Zet Marker</button>
                                                    <button type="button" class="btn btn-danger btn-sm cancelMarker">Cancel Marker</button>
                                                    break;
                                                case GeoTypeEnum.Lijn:
                                                    <button type="button" class="btn btn-primary btn-sm  drawLine">Teken Lijn</button>
                                                    <button type="button" class="btn btn-danger btn-sm  cancelLine">Cancel Lijn</button>

                                                    break;
                                                case GeoTypeEnum.Vlak:
                                                    <button type="button" class="btn btn-primary btn-sm  drawPolygon">Teken Vlak</button>
                                                    <button type="button" class="btn btn-danger btn-sm  cancelPolygon">Cancel Vlak</button>
                                                    break;
                                            }
                                            <p><small>(Verkeerd geplaatst? Geen probleem klik op uw markering en vervolgens op de gele knop.)</small></p>
                                            @Html.HiddenFor(x => x.PagesList[i].Questions[j].GeoCodeAnswer)
                                        </div>


                                    if (questionView.StartLocationLat != null)
                                    {

                                        <div id="mapid@(i)" onclick="map@(i).invalidateSize()" class="map" style="height: 800px; margin-left: 60px; margin-right: 60px;"></div>
                                        <button id="mapButton@(i)" class="mapBtn btn btn-info">Terug naar het startpunt!</button>

                                        <script>
                                            var mapCenter@(i) = [parseFloat(@questionView.StartLocationLat), parseFloat(@questionView.StartLocationLong)];

                                            var mapZoom@(i) = @questionView.StartZoomLevel;

                                            var map@(i) = L.map('mapid@(i)').setView(mapCenter@(i), mapZoom@(i));
                                            var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
                                                {
                                                    maxZoom: 19,
                                                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                                                }).addTo(map@(i));

                                            var polygonDrawer@(i) = new L.Draw.Polygon(map@(i));
                                            var markerDrawer@(i) = new L.Draw.Marker(map@(i));
                                            var polylineDrawer@(i) = new L.Draw.Polyline(map@(i));

                                            var array@(i) = [];

                                            map@(i).on('draw:created', function (e) {
                                                var type = e.layerType,
                                                    layer = e.layer;
                                                layer.bindPopup('<button class="btn btn-warning" type="button" onclick="editMapItem( ' + questionId + ')" >Plaats Opnieuw!</button>');
                                                switch (type) {
                                                case "marker":
                                                    geoAnswer = layer.getLatLng();
                                                    break;
                                                case "polyline":
                                                    geoAnswer = layer.getLatLngs();
                                                    break;
                                                case "polygon":
                                                    geoAnswer = layer.getLatLngs();
                                                    break;
                                                }
                                                isDrawing = false;
                                                layer.addTo(map@(i));
                                                var questionIdNumber =
                                                    parseInt(questionId.split("_")[1]
                                                        .toString().split("question")[1]);
                                                array@(i)[questionIdNumber] = layer;
                                                window.scrollBy(0, 300);
                                                $("#" + questionId).children("input").val(geoAnswer);
                                            });

                                        </script>
                                    }


                                    break;
                            }
                        </div>
                        }
                    </div>
                }

                <section id="pageButtons" class="row">
                    <div id="previousButtonDiv" class="col">
                        <p>Vorige</p>
                        <button id="previousPageButton">
                            <img src="~/images/pijlLinks.png" style='height: 80px; width: 120px; object-fit: contain' />
                        </button>
                    </div>

                    <div id="nextButtonDiv" class="col">
                        <p>Volgende</p>
                        <button id="nextPageButton">
                            <img src="~/images/pijlRechts.png" style='height: 80px; width: 120px; object-fit: contain'/>
                        </button>
                    </div>
                
                    <div id="submitBtn" class="col">
                        <p>Einde Enquete</p>
                        <input type="submit" name="submit" value="Voltooi!" class="btn btn-success" />
                    </div>

                </section>

            }
            


        </div>
</div>

<script>

    var questionId;
    var geoAnswer;
    var isDrawing;
    

    function editMapItem(questionId) {
        var mapId = $(questionId).attr('id').toString().split("_")[0].toString().split("page")[1];
        var questionIdNumber = $(questionId).attr('id').toString().split("_")[1].toString().split("question")[1];
        window["map" + mapId].removeLayer(window["array" + mapId][parseInt(questionIdNumber)]);
        window["array" + mapId][parseInt(questionIdNumber)] = null;
        $(questionId).show();
    }

    $(document).ready(function () {

        isDrawing = false;

        $("#submitBtn").hide();

        var pageNumber = 0;
        var maxNumber = $("#overview").children().first().children("div").length;
        var pageDivs = $("#overview").children().first().children("div");

        if (pageNumber == 0) {
            $("#previousButtonDiv").hide();
        }

        $(".mapBtn").click(function (e) {
            e.preventDefault();
            var mapId = $(this).attr('id').split("mapButton").pop();
            console.log(mapId);
            window["map" + mapId].setView(window["mapCenter" + mapId], window["mapZoom" + mapId]);
            return false;
        });

        $(".drawMarker").click(function (e) {
            if (!isDrawing) {
                isDrawing = true;
                var mapId = $(this).parent().attr('id').toString().split("_")[0].toString().split("page")[1];
                window["map" + mapId].invalidateSize();
                questionId = $(this).parent().attr('id');
                window["markerDrawer" + mapId].enable();
            }
        }); 

        $(".drawLine").click(function (e) {
            if (!isDrawing) {
                isDrawing = true;
                var mapId = $(this).parent().attr('id').toString().split("_")[0].toString().split("page")[1];
                window["map" + mapId].invalidateSize();
                questionId = $(this).parent().attr('id');
                window["polylineDrawer" + mapId].enable();
            }
        });

        $(".drawPolygon").click(function (e) {
            if (!isDrawing) {
                isDrawing = true;
                var mapId = $(this).parent().attr('id').toString().split("_")[0].toString().split("page")[1];
                window["map" + mapId].invalidateSize();
                questionId = $(this).parent().attr('id');
                window["polygonDrawer" + mapId].enable();
            }
        });

        $(".cancelPolygon").click(function (e) {
            var mapId = $(this).parent().attr('id').toString().split("_")[0].toString().split("page")[1];
            window["polygonDrawer" + mapId].disable();
            isDrawing = false;
        });

        $(".cancelPolyline").click(function (e) {
            var mapId = $(this).parent().attr('id').toString().split("_")[0].toString().split("page")[1];
            window["polylineDrawer" + mapId].disable();
            isDrawing = false;
        });

        $(".cancelMarker").click(function (e) {
            var mapId = $(this).parent().attr('id').toString().split("_")[0].toString().split("page")[1];
            window["markerDrawer" + mapId].disable();
            isDrawing = false;
        });


        $("#pageCounter").text("Pagina: 1/" + maxNumber);

        $("#nextPageButton").click(function (e) {
            e.preventDefault();
            pageNumber++;
            if (pageNumber > 0) {
                $("#previousButtonDiv").show();
            }
            for (var i = 0; i < maxNumber; i++) {
                if (i == pageNumber) {
                    $(pageDivs[i]).fadeIn();
                } else {
                    $(pageDivs[i]).hide();
                }
            }

            if (pageNumber + 1 == maxNumber) {
                $("#submitBtn").show();
                $("#nextButtonDiv").hide();
            }
            $("#pageCounter").text("Pagina: " + (pageNumber + 1) + "/" + maxNumber);
            $("#pageButtons").show();
            return false;
        });

        $("#previousPageButton").click(function (e) {
            e.preventDefault();
            if (pageNumber > 0) {
                pageNumber--;
                $("#nextButtonDiv").show();
                $("#submitBtn").hide();
            }
            for (var i = 0; i < maxNumber; i++) {
                if (i == pageNumber) {
                    $(pageDivs[i]).fadeIn();
                } else {
                    $(pageDivs[i]).hide();
                }
            }
            if (pageNumber == 0) {
                $("#previousButtonDiv").hide();
            }
            $("#pageCounter").text("Pagina: " + (pageNumber + 1) + "/" + maxNumber);
            $("#pageButtons").show();
            return false;
        });

 

    });




</script>
</body>
</html>
