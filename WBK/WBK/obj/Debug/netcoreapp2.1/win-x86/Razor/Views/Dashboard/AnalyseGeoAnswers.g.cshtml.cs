#pragma checksum "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ba9ac1ff1801784947c7f9817a273305f726f23f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_AnalyseGeoAnswers), @"mvc.1.0.view", @"/Views/Dashboard/AnalyseGeoAnswers.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/AnalyseGeoAnswers.cshtml", typeof(AspNetCore.Views_Dashboard_AnalyseGeoAnswers))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK;

#line default
#line hidden
#line 2 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK.Models;

#line default
#line hidden
#line 7 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels;

#line default
#line hidden
#line 8 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels.Answers;

#line default
#line hidden
#line 9 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels.Questions;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ba9ac1ff1801784947c7f9817a273305f726f23f", @"/Views/Dashboard/AnalyseGeoAnswers.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d0bc4e9b17a8b143e226c8e7b1c445550acc752", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_AnalyseGeoAnswers : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DataModels.Survey>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/css/bootstrap.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", "~/css/site.css", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("include", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/WijkBeweegKaart Logo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("WijkBeweegKaart"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 80px; width: 360px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("p-0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("overflow: hidden;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
  
    ViewData["Title"] = "AllAnswers";
    Layout = null;

#line default
#line hidden
            BeginContext(68, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(171, 37, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"nl\">\r\n");
            EndContext();
            BeginContext(208, 796, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "79041946f48c4085a3dc7968e7144834", async() => {
                BeginContext(214, 318, true);
                WriteLiteral(@"
    <meta charset=""utf-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <title>WijkBeweegKaart</title>

    <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"" />
    <script src=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.js""></script>

    ");
                EndContext();
                BeginContext(532, 51, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "558c0cbd318543dfb56253cdc1dec62d", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(583, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(589, 62, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f1d30dffa7ee442aae8ab9340b5116f6", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(651, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(657, 56, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5f92621427e5499fba099f250b3934fc", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(713, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(719, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "fa8824201eb44a4683d81c64eff6d061", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(790, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(796, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "35c7b408199d4924ae705db9ee4cedfa", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(843, 12, true);
                WriteLiteral("\r\n    \r\n    ");
                EndContext();
                BeginContext(855, 138, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6e98dffd07e74a268a277ae08b8b32e9", async() => {
                    BeginContext(890, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(900, 73, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "01cc927f517d49b4a6614b7192866c43", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_6.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
#line 29 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(973, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Include = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(993, 4, true);
                WriteLiteral("\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1004, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(1008, 13913, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c6120de10d13431895fe9318fac4d7aa", async() => {
                BeginContext(1052, 131, true);
                WriteLiteral("\r\n    <nav class=\"navbar navbar-light\" style=\"background-color: #F9A11B;\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n            ");
                EndContext();
                BeginContext(1183, 105, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "43b6608cbc584c79ab26bbdabdebd3c9", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1288, 81, true);
                WriteLiteral("\r\n        </a>\r\n    </nav>\r\n\r\n    <div class=\"container-fluid p-0\">\r\n        <h1>");
                EndContext();
                BeginContext(1370, 11, false);
#line 42 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
       Write(Model.Title);

#line default
#line hidden
                EndContext();
                BeginContext(1381, 212, true);
                WriteLiteral(" Analyse</h1>\r\n\r\n        <div class=\"row\" style=\"margin-left: 0;\">\r\n            <div id=\"map\" style=\"width: 1500px; height: 600px; float: left;\"></div>\r\n            <div style=\"float: left; margin-left: 10px;\">\r\n");
                EndContext();
#line 47 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                 foreach (Page pageView in Model.Pages)
                {

#line default
#line hidden
                BeginContext(1669, 24, true);
                WriteLiteral("                    <h3>");
                EndContext();
                BeginContext(1694, 14, false);
#line 49 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                   Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(1708, 33, true);
                WriteLiteral("</h3>\r\n                    <dl>\r\n");
                EndContext();
#line 51 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                         foreach (Question question in pageView.Questions)
                        {

#line default
#line hidden
                BeginContext(1844, 88, true);
                WriteLiteral("                            <dd>\r\n                                <input type=\"checkbox\"");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 1932, "\"", 1949, 1);
#line 54 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 1937, question.Id, 1937, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("name", " name=\"", 1950, "\"", 1982, 1);
#line 54 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 1957, question.Type.ToString(), 1957, 25, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("value", " value=\"", 1983, "\"", 2006, 1);
#line 54 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 1991, question.Value, 1991, 15, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2007, 41, true);
                WriteLiteral(">\r\n                                <label");
                EndContext();
                BeginWriteAttribute("for", " for=\"", 2048, "\"", 2066, 1);
#line 55 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 2054, question.Id, 2054, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2067, 2, true);
                WriteLiteral("> ");
                EndContext();
                BeginContext(2070, 14, false);
#line 55 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                      Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(2084, 45, true);
                WriteLiteral("</label>\r\n                            </dd>\r\n");
                EndContext();
#line 57 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                            if (question.Type == TypeEnum.GeoVraag)
                            {
                                var geoQuestion = question as GeoQuestion;

#line default
#line hidden
                BeginContext(2305, 90, true);
                WriteLiteral("                                <script>\r\n                                    var geoArray");
                EndContext();
                BeginContext(2397, 11, false);
#line 61 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(2409, 51, true);
                WriteLiteral(" = [];\r\n                                </script>\r\n");
                EndContext();
#line 63 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                foreach (Answer answer in question.Answers)
                                {
                                    var geoAnswer = answer as GeoAnswer;
                                    switch (geoQuestion.TypeOfMarker)
                                    {
                                        case GeoTypeEnum.Marker:

#line default
#line hidden
                BeginContext(2822, 209, true);
                WriteLiteral("                                            <script>\r\n                                                $(document).ready(function () {\r\n                                                    var marker = L.marker(");
                EndContext();
                BeginContext(3032, 17, false);
#line 71 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                     Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(3049, 101, true);
                WriteLiteral(").on(\'click\', function (e) {\r\n                                                        highlightUser(\"");
                EndContext();
                BeginContext(3152, 27, false);
#line 72 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                   Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(3180, 122, true);
                WriteLiteral("\");\r\n                                                    });\r\n                                                    geoArray");
                EndContext();
                BeginContext(3304, 11, false);
#line 74 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                        Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(3316, 124, true);
                WriteLiteral(".push(marker);\r\n                                                });\r\n                                            </script>\r\n");
                EndContext();
#line 77 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            break;

                                        case GeoTypeEnum.Vlak:

#line default
#line hidden
                BeginContext(3558, 207, true);
                WriteLiteral("                                            <script>\r\n                                              $(document).ready(function () {\r\n                                                  var polygon = L.polygon(");
                EndContext();
                BeginContext(3766, 17, false);
#line 82 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                     Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(3783, 99, true);
                WriteLiteral(").on(\'click\', function (e) {\r\n                                                      highlightUser(\"");
                EndContext();
                BeginContext(3884, 27, false);
#line 83 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                 Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(3912, 118, true);
                WriteLiteral("\");\r\n                                                  });\r\n                                                  geoArray");
                EndContext();
                BeginContext(4032, 11, false);
#line 85 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                      Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(4044, 123, true);
                WriteLiteral(".push(polygon);\r\n                                              });\r\n                                            </script>\r\n");
                EndContext();
#line 88 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            break;

                                        case GeoTypeEnum.Lijn:

#line default
#line hidden
                BeginContext(4285, 213, true);
                WriteLiteral("                                            <script>\r\n                                                $(document).ready(function () {\r\n                                                    var polyline = L.polyline(");
                EndContext();
                BeginContext(4499, 17, false);
#line 93 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                         Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(4516, 101, true);
                WriteLiteral(").on(\'click\', function (e) {\r\n                                                        highlightUser(\"");
                EndContext();
                BeginContext(4619, 27, false);
#line 94 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                   Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(4647, 122, true);
                WriteLiteral("\");\r\n                                                    });\r\n                                                    geoArray");
                EndContext();
                BeginContext(4771, 11, false);
#line 96 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                        Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(4783, 126, true);
                WriteLiteral(".push(polyline);\r\n                                                });\r\n                                            </script>\r\n");
                EndContext();
#line 99 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            break;
                                    }
                                }
                            }
                            
                        }

#line default
#line hidden
                BeginContext(5123, 27, true);
                WriteLiteral("                    </dl>\r\n");
                EndContext();
#line 106 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"

                }

#line default
#line hidden
                BeginContext(5171, 89, true);
                WriteLiteral("            </div>\r\n        </div>\r\n\r\n        <div class=\"row\" style=\"margin-left: 0;\">\r\n");
                EndContext();
#line 112 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
             foreach (Page pageView in Model.Pages)
            {
                if (Model.Pages.First() == pageView)
                {

#line default
#line hidden
                BeginContext(5401, 169, true);
                WriteLiteral("                    <table id=\"first\" style=\"border: 1px solid black;\">\r\n                        <tr>\r\n                            <th>\r\n                                ");
                EndContext();
                BeginContext(5571, 14, false);
#line 119 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                           Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(5585, 146, true);
                WriteLiteral("\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Gebruiker</th>\r\n");
                EndContext();
#line 124 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                             foreach (Question question in pageView.Questions)
                            {

#line default
#line hidden
                BeginContext(5842, 35, true);
                WriteLiteral("                                <th");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 5877, "\"", 5904, 2);
                WriteAttributeValue("", 5885, "table", 5885, 5, true);
#line 126 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 5890, question.Id, 5890, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(5905, 1, true);
                WriteLiteral(">");
                EndContext();
                BeginContext(5907, 14, false);
#line 126 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(5921, 7, true);
                WriteLiteral("</th>\r\n");
                EndContext();
#line 127 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                            }

#line default
#line hidden
                BeginContext(5959, 31, true);
                WriteLiteral("                        </tr>\r\n");
                EndContext();
#line 129 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                         foreach (Answer asnwer in pageView.Questions[0].Answers)
                        {
                            Respondant respondant = asnwer.Respondant;

#line default
#line hidden
                BeginContext(6172, 34, true);
                WriteLiteral("                            <tr>\r\n");
                EndContext();
#line 133 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 if (Model.Pages.First() == pageView)
                                {

#line default
#line hidden
                BeginContext(6312, 73, true);
                WriteLiteral("                                    <td style=\"border: 1px solid black;\">");
                EndContext();
                BeginContext(6386, 27, false);
#line 135 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                    Write(asnwer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(6413, 7, true);
                WriteLiteral("</td>\r\n");
                EndContext();
#line 136 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                }

#line default
#line hidden
                BeginContext(6455, 32, true);
                WriteLiteral("                                ");
                EndContext();
#line 137 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 foreach (Question question in pageView.Questions)
                                {
                                    foreach (Answer answer in question.Answers)
                                    {
                                        if (answer.Respondant.SessionId == respondant.SessionId)
                                        {
                                            

#line default
#line hidden
                BeginContext(6881, 46, true);
                WriteLiteral("                                           <td");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 6927, "\"", 6954, 2);
                WriteAttributeValue("", 6935, "table", 6935, 5, true);
#line 144 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 6940, question.Id, 6940, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(6955, 36, true);
                WriteLiteral(" style=\"border: 1px solid black;\">\r\n");
                EndContext();
#line 145 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            switch (question.Type)
                                            {
                                                case TypeEnum.NummerVraag:
                                                    var number = answer as NumberAnswer;                                                  
                                                        

#line default
#line hidden
                BeginContext(7379, 18, false);
#line 149 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(number.NumberValue);

#line default
#line hidden
                EndContext();
#line 149 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           
                                                    break;

                                                case TypeEnum.SliderVraag:
                                                    var slider = answer as NumberAnswer;
                                                        

#line default
#line hidden
                BeginContext(7684, 18, false);
#line 154 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(slider.NumberValue);

#line default
#line hidden
                EndContext();
#line 154 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           
                                                    break;

                                                case TypeEnum.GeoVraag:

#line default
#line hidden
                BeginContext(7839, 69, true);
                WriteLiteral("                                                     <p>Zie Map</p>\r\n");
                EndContext();
#line 159 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                    break;

                                                case TypeEnum.OpenVraag:
                                                    var open = answer as TextAnswer;
                                                        

#line default
#line hidden
                BeginContext(8187, 14, false);
#line 163 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(open.TextValue);

#line default
#line hidden
                EndContext();
#line 163 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                          
                                                    break;

                                                case TypeEnum.MeerkeuzeVraag:
                                                    var multipleChoiceAnswer = answer as MultipleChoiceAnswer;
                                                        

#line default
#line hidden
                BeginContext(8516, 76, false);
#line 168 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(string.Join(" ", multipleChoiceAnswer.AnsweredOptions.Select(t => t.Answer)));

#line default
#line hidden
                EndContext();
#line 168 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                                                                     ;
                                                    break;
                                            }

#line default
#line hidden
                BeginContext(8702, 50, true);
                WriteLiteral("                                           </td>\r\n");
                EndContext();
#line 172 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                        }
                                    }
                                }

#line default
#line hidden
                BeginContext(8869, 35, true);
                WriteLiteral("                            </tr>\r\n");
                EndContext();
#line 176 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                        }

#line default
#line hidden
                BeginContext(8931, 30, true);
                WriteLiteral("                    </table>\r\n");
                EndContext();
#line 178 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                }
                else
                {

#line default
#line hidden
                BeginContext(9021, 26, true);
                WriteLiteral("                    <table");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 9047, "\"", 9064, 1);
#line 181 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 9052, pageView.Id, 9052, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(9065, 132, true);
                WriteLiteral(" style=\"border: 1px solid black;\">\r\n                        <tr>\r\n                            <th>\r\n                                ");
                EndContext();
                BeginContext(9198, 14, false);
#line 184 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                           Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(9212, 98, true);
                WriteLiteral("\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n");
                EndContext();
#line 188 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                             foreach (Question question in pageView.Questions)
                            {

#line default
#line hidden
                BeginContext(9421, 35, true);
                WriteLiteral("                                <th");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 9456, "\"", 9483, 2);
                WriteAttributeValue("", 9464, "table", 9464, 5, true);
#line 190 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 9469, question.Id, 9469, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(9484, 1, true);
                WriteLiteral(">");
                EndContext();
                BeginContext(9486, 14, false);
#line 190 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(9500, 7, true);
                WriteLiteral("</th>\r\n");
                EndContext();
#line 191 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                            }

#line default
#line hidden
                BeginContext(9538, 31, true);
                WriteLiteral("                        </tr>\r\n");
                EndContext();
#line 193 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                         foreach (Answer asnwer in pageView.Questions[0].Answers)
                        {
                            Respondant respondant = asnwer.Respondant;

#line default
#line hidden
                BeginContext(9751, 34, true);
                WriteLiteral("                            <tr>\r\n");
                EndContext();
#line 197 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 if (Model.Pages.First() == pageView)
                                {

#line default
#line hidden
                BeginContext(9891, 73, true);
                WriteLiteral("                                    <td style=\"border: 1px solid black;\">");
                EndContext();
                BeginContext(9965, 27, false);
#line 199 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                    Write(asnwer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(9992, 7, true);
                WriteLiteral("</td>\r\n");
                EndContext();
#line 200 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                }

#line default
#line hidden
                BeginContext(10034, 32, true);
                WriteLiteral("                                ");
                EndContext();
#line 201 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 foreach (Question question in pageView.Questions)
                                {
                                    foreach (Answer answer in question.Answers)
                                    {
                                        if (answer.Respondant.SessionId == respondant.SessionId)
                                        {

#line default
#line hidden
                BeginContext(10414, 47, true);
                WriteLiteral("                                            <td");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 10461, "\"", 10488, 2);
                WriteAttributeValue("", 10469, "table", 10469, 5, true);
#line 207 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 10474, question.Id, 10474, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(10489, 36, true);
                WriteLiteral(" style=\"border: 1px solid black;\">\r\n");
                EndContext();
#line 208 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                 switch (question.Type)
                                                {
                                                    case TypeEnum.NummerVraag:
                                                        var number = answer as NumberAnswer;                                                  
                                                        

#line default
#line hidden
                BeginContext(10930, 18, false);
#line 212 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(number.NumberValue);

#line default
#line hidden
                EndContext();
#line 212 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           
                                                        break;

                                                    case TypeEnum.SliderVraag:
                                                        var slider = answer as NumberAnswer;
                                                        

#line default
#line hidden
                BeginContext(11247, 18, false);
#line 217 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(slider.NumberValue);

#line default
#line hidden
                EndContext();
#line 217 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           
                                                        break;

                                                    case TypeEnum.GeoVraag:

#line default
#line hidden
                BeginContext(11410, 72, true);
                WriteLiteral("                                                        <p>Zie Map</p>\r\n");
                EndContext();
#line 222 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                        break;

                                                    case TypeEnum.OpenVraag:
                                                        var open = answer as TextAnswer;
                                                        

#line default
#line hidden
                BeginContext(11773, 14, false);
#line 226 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(open.TextValue);

#line default
#line hidden
                EndContext();
#line 226 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                          
                                                        break;

                                                    case TypeEnum.MeerkeuzeVraag:
                                                        var multipleChoiceAnswer = answer as MultipleChoiceAnswer;
                                                        

#line default
#line hidden
                BeginContext(12114, 76, false);
#line 231 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(string.Join(" ", multipleChoiceAnswer.AnsweredOptions.Select(t => t.Answer)));

#line default
#line hidden
                EndContext();
#line 231 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                                                                     ;
                                                        break;
                                                }

#line default
#line hidden
                BeginContext(12308, 51, true);
                WriteLiteral("                                            </td>\r\n");
                EndContext();
#line 235 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            }
                                        }
                                    }  

#line default
#line hidden
                BeginContext(12490, 35, true);
                WriteLiteral("                            </tr>\r\n");
                EndContext();
#line 239 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                        }

#line default
#line hidden
                BeginContext(12552, 30, true);
                WriteLiteral("                    </table>\r\n");
                EndContext();
#line 241 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                }
            }

#line default
#line hidden
                BeginContext(12616, 2298, true);
                WriteLiteral(@"        </div>
    </div>

    <script>
        var map = L.map('map').setView([51.47358, 5.453167], 13);
        var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'
        }).addTo(map);

        $('input[type=""checkbox""]').change(function (event) {
            var questionId = $(this).attr('id');
            var type = $(this).attr('name');
            if (type == ""GeoVraag"") {
                if ($(this).is("":checked"")) {
                    window[""geoArray"" + questionId].forEach(addLayer);
                    $('.table' + questionId).show();
                } else {
                    window[""geoArray"" + questionId].forEach(removelayer);
                    $('.table' + questionId).hide();
                }
            } else {
                if ($(this).is("":checked"")) {
                    $('.tab");
                WriteLiteral(@"le' + questionId).show();
                } else {
                    $('.table' + questionId).hide();
                }
            }
        });

        function highlightUser(sessionId) {
            var rowIndex = 0;
            $('#first tr').each(function() {
                var respondantId = $(this).find(""td"").eq(0).html();
                if (respondantId == sessionId) {
                    rowIndex = $(this).index();
                    console.log(rowIndex);
                }
            });
                                                            
            $('tr').each(function () {
                if ($(this).index() == rowIndex) {
                    $(this).css(""backgroundColor"", ""yellow"");
                    $(this).insertAfter($(this).parent().parent().find('tr').eq(1));
                } else {
                    $(this).css(""backgroundColor"", ""transparent"");
                }

            });
        }


        $('td').click(function() {
            ");
                WriteLiteral("alert($(this).text());\r\n        });\r\n        \r\n\r\n        function removelayer(layer, index) {\r\n            map.removeLayer(layer);\r\n        }\r\n\r\n        function addLayer(layer, index) {\r\n            map.addLayer(layer);\r\n        }\r\n    </script>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14921, 13, true);
            WriteLiteral("\r\n</html>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DataModels.Survey> Html { get; private set; }
    }
}
#pragma warning restore 1591
