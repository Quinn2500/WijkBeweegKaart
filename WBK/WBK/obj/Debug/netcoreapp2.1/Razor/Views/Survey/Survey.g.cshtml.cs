#pragma checksum "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "09db75a57e0ea57146a362e30afeed045a076fb4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Survey_Survey), @"mvc.1.0.view", @"/Views/Survey/Survey.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Survey/Survey.cshtml", typeof(AspNetCore.Views_Survey_Survey))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK;

#line default
#line hidden
#line 2 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK.Models;

#line default
#line hidden
#line 5 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
using DataModels;

#line default
#line hidden
#line 6 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
using DataModels.Questions;

#line default
#line hidden
#line 7 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
using WBK.Models.Create;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"09db75a57e0ea57146a362e30afeed045a076fb4", @"/Views/Survey/Survey.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d0bc4e9b17a8b143e226c8e7b1c445550acc752", @"/Views/_ViewImports.cshtml")]
    public class Views_Survey_Survey : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<WBK.Models.Create.SurveyViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery.appear-master/index.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/css/bootstrap.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/WijkBeweegKaart Logo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("WijkBeweegKaart"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 80px; width: 360px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/pijlLinks.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 80px; width: 120px; object-fit: contain"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/pijlRechts.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("p-0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 100%;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
  
    Layout = "";

#line default
#line hidden
            BeginContext(25, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(143, 88, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html style=\"height: 100%; overflow-y: scroll; overflow-x: hidden\">\r\n");
            EndContext();
            BeginContext(231, 927, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eded11089226485ba774be32cdc7f89a", async() => {
                BeginContext(237, 536, true);
                WriteLiteral(@"
    <meta charset=""utf-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <title>WijkBeweegKaart</title>

    <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"" />
    <script src=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.js""></script>

    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.css"" />
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.js""></script>

    ");
                EndContext();
                BeginContext(773, 51, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "350e3b040d6f4724b67ac13ceea8573d", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(824, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(830, 62, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "ee6b9098afa645b7b589e57718d423bc", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(892, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(898, 56, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "774aa0eebf0c4421b62e42d3bc378760", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(954, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(960, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "37f92eb12d614f76ae0d861e3a40a5d8", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1019, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1025, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "ba7a477f863d4b299ab1484c564736fe", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1096, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1102, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "ecf135f854524f5283ef9db0573ae4d2", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1149, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1158, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(1162, 20262, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3dd90bbe164c4aada7b703a9537c243d", async() => {
                BeginContext(1202, 131, true);
                WriteLiteral("\r\n    <nav class=\"navbar navbar-light\" style=\"background-color: #F9A11B;\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n            ");
                EndContext();
                BeginContext(1333, 105, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "8c66009f56954fe8aa7eff3b97faa1e8", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1438, 236, true);
                WriteLiteral("\r\n        </a>\r\n        <h3 id=\"pageCounter\">Pagina: 0/0</h3>\r\n    </nav>\r\n\r\n<div class=\"container-fluid p-0 row h-75\">\r\n\r\n        <div id=\"overview\" class=\"col-12 my-auto justify-content-center text-center\" style=\"overflow: visible\">\r\n");
                EndContext();
#line 42 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
             using (Html.BeginForm("Survey", "Survey", FormMethod.Post, new { @class = "" }))
            {
                

#line default
#line hidden
                BeginContext(1801, 23, false);
#line 44 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
           Write(Html.AntiForgeryToken());

#line default
#line hidden
                EndContext();
                BeginContext(1828, 61, true);
                WriteLiteral("                <div id=\"introDiv\">\r\n                    <h1>");
                EndContext();
                BeginContext(1890, 11, false);
#line 47 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                   Write(Model.Title);

#line default
#line hidden
                EndContext();
                BeginContext(1901, 30, true);
                WriteLiteral("</h1>\r\n                    <p>");
                EndContext();
                BeginContext(1932, 17, false);
#line 48 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                  Write(Model.Description);

#line default
#line hidden
                EndContext();
                BeginContext(1949, 5, true);
                WriteLiteral("<p>\r\n");
                EndContext();
#line 49 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                     if (Model.ImageUrl != null)
                    {

#line default
#line hidden
                BeginContext(2027, 28, true);
                WriteLiteral("                        <img");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 2055, "\"", 2076, 1);
#line 51 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 2061, Model.ImageUrl, 2061, 15, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2077, 62, true);
                WriteLiteral(" style=\'height: 200px; width: 200px; object-fit: contain\' />\r\n");
                EndContext();
#line 52 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                    }

#line default
#line hidden
                BeginContext(2162, 26, true);
                WriteLiteral("\r\n                </div>\r\n");
                EndContext();
#line 55 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                for (int i = 0; i < Model.PagesList.Count; i++)
                {
                    PageViewModel pageView = Model.PagesList[i];
                    Model.PagesList[i] = pageView;

#line default
#line hidden
                BeginContext(2390, 145, true);
                WriteLiteral("                    <div class=\"pageDiv\" style=\"display: none\">\r\n                        <div class=\"pageText\">\r\n                            <h2>");
                EndContext();
                BeginContext(2536, 14, false);
#line 61 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                           Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(2550, 38, true);
                WriteLiteral("</h2>\r\n                            <p>");
                EndContext();
                BeginContext(2589, 20, false);
#line 62 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                          Write(pageView.Description);

#line default
#line hidden
                EndContext();
                BeginContext(2609, 66, true);
                WriteLiteral("</p>\r\n                        </div>\r\n                    </div>\r\n");
                EndContext();
                BeginContext(2677, 24, true);
                WriteLiteral("                    <div");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 2701, "\"", 2717, 2);
                WriteAttributeValue("", 2706, "pageDiv", 2706, 7, true);
#line 66 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 2713, i, 2713, 4, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2718, 64, true);
                WriteLiteral(" class=\"questionDiv\"  style=\"display: none; margin-top:20px;\">\r\n");
                EndContext();
#line 67 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                         for (int j = 0; j < pageView.Questions.Count; j++)
                        {

#line default
#line hidden
                BeginContext(2886, 52, true);
                WriteLiteral("                            <div class=\"question\">\r\n");
                EndContext();
#line 70 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                   QuestionViewModel questionView = pageView.Questions[j]; 

#line default
#line hidden
                BeginContext(3032, 48, true);
                WriteLiteral("                                <h3 name=\"name\">");
                EndContext();
                BeginContext(3081, 18, false);
#line 71 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                           Write(questionView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(3099, 42, true);
                WriteLiteral("</h3>\r\n                                <p>");
                EndContext();
                BeginContext(3142, 24, false);
#line 72 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                              Write(questionView.Description);

#line default
#line hidden
                EndContext();
                BeginContext(3166, 6, true);
                WriteLiteral("</p>\r\n");
                EndContext();
#line 73 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                 switch (questionView.Type)
                                {
                                    case TypeEnum.OpenVraag:
                                        

#line default
#line hidden
                BeginContext(3371, 91, false);
#line 76 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                   Write(Html.TextBoxFor(x => x.PagesList[i].Questions[j].TextAnswer, new { required = "required" }));

#line default
#line hidden
                EndContext();
#line 76 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                                                                    
                                        break;
                                    case TypeEnum.SliderVraag:

#line default
#line hidden
                BeginContext(3576, 47, true);
                WriteLiteral("                                        <label>");
                EndContext();
                BeginContext(3624, 45, false);
#line 79 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                          Write(Model.PagesList[i].Questions[j].SliderMinText);

#line default
#line hidden
                EndContext();
                BeginContext(3669, 10, true);
                WriteLiteral("</label>\r\n");
                EndContext();
                BeginContext(3720, 172, false);
#line 80 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                   Write(Html.TextBoxFor(x => x.PagesList[i].Questions[j].NumberAnswer, new { type = "range", min = 0, max = Model.PagesList[i].Questions[j].SliderScaleVal, required = "required" }));

#line default
#line hidden
                EndContext();
                BeginContext(3894, 47, true);
                WriteLiteral("                                        <label>");
                EndContext();
                BeginContext(3942, 45, false);
#line 81 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                          Write(Model.PagesList[i].Questions[j].SliderMaxText);

#line default
#line hidden
                EndContext();
                BeginContext(3987, 10, true);
                WriteLiteral("</label>\r\n");
                EndContext();
#line 82 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                        break;
                                    case TypeEnum.NummerVraag:
                                        

#line default
#line hidden
                BeginContext(4150, 183, false);
#line 84 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                   Write(Html.TextBoxFor(x => x.PagesList[i].Questions[j].NumberAnswer, new { type = "number", min = Model.PagesList[i].Questions[j].MinValue, max = Model.PagesList[i].Questions[j].MaxValue }));

#line default
#line hidden
                EndContext();
#line 84 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                                                                                                                                                                
                                        break;
                                    case TypeEnum.MeerkeuzeVraag:
                                        if (Model.PagesList[i].Questions[j].AllowMultipleAnswers)
                                        {
                                            for (int q = 0; q < Model.PagesList[i].Questions[j].Options.Count; q++)
                                            {
                                                

#line default
#line hidden
                BeginContext(4805, 70, false);
#line 91 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                           Write(Html.CheckBoxFor(x => x.PagesList[i].Questions[j].Options[q].Selected));

#line default
#line hidden
                EndContext();
                BeginContext(4877, 55, true);
                WriteLiteral("                                                <label>");
                EndContext();
                BeginContext(4933, 49, false);
#line 92 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                  Write(Model.PagesList[i].Questions[j].Options[q].Answer);

#line default
#line hidden
                EndContext();
                BeginContext(4982, 62, true);
                WriteLiteral("</label>\r\n                                                <img");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 5044, "\"", 5102, 1);
#line 93 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 5050, Model.PagesList[i].Questions[j].Options[q].ImageUrl, 5050, 52, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(5103, 106, true);
                WriteLiteral(" width=\"150\" height=\"150\" style=\"object-fit: none;\"/>\r\n                                                <p>");
                EndContext();
                BeginContext(5210, 54, false);
#line 94 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                              Write(Model.PagesList[i].Questions[j].Options[q].Description);

#line default
#line hidden
                EndContext();
                BeginContext(5264, 6, true);
                WriteLiteral("</p>\r\n");
                EndContext();
#line 95 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                            }
                                        }
                                        else
                                        {

#line default
#line hidden
                BeginContext(5449, 73, true);
                WriteLiteral("                                            <div class=\"oneChecboxDiv\">\r\n");
                EndContext();
#line 100 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                 for (int q = 0; q < Model.PagesList[i].Questions[j].Options.Count; q++)
                                                {
                                                    

#line default
#line hidden
                BeginContext(5748, 101, false);
#line 102 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                               Write(Html.CheckBoxFor(x => x.PagesList[i].Questions[j].Options[q].Selected, new { required = "required" }));

#line default
#line hidden
                EndContext();
                BeginContext(5851, 59, true);
                WriteLiteral("                                                    <label>");
                EndContext();
                BeginContext(5911, 49, false);
#line 103 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                      Write(Model.PagesList[i].Questions[j].Options[q].Answer);

#line default
#line hidden
                EndContext();
                BeginContext(5960, 66, true);
                WriteLiteral("</label>\r\n                                                    <img");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 6026, "\"", 6084, 1);
#line 104 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 6032, Model.PagesList[i].Questions[j].Options[q].ImageUrl, 6032, 52, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(6085, 110, true);
                WriteLiteral(" width=\"150\" height=\"150\" style=\"object-fit: none;\"/>\r\n                                                    <p>");
                EndContext();
                BeginContext(6196, 54, false);
#line 105 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                  Write(Model.PagesList[i].Questions[j].Options[q].Description);

#line default
#line hidden
                EndContext();
                BeginContext(6250, 6, true);
                WriteLiteral("</p>\r\n");
                EndContext();
#line 106 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                }

#line default
#line hidden
                BeginContext(6307, 52, true);
                WriteLiteral("                                            </div>\r\n");
                EndContext();
#line 108 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                        }
                                        break;
                                    case TypeEnum.GeoVraag:


#line default
#line hidden
                BeginContext(6513, 48, true);
                WriteLiteral("                                            <div");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 6561, "\"", 6587, 4);
                WriteAttributeValue("", 6566, "page", 6566, 4, true);
#line 112 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 6570, i, 6570, 4, false);

#line default
#line hidden
                WriteAttributeValue("", 6574, "_question", 6574, 9, true);
#line 112 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 6583, j, 6583, 4, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(6588, 223, true);
                WriteLiteral(" class=\"geoDraw\">\r\n                                                <p style=\"display: inline-block;\"><small>Druk op de volgende knop om uw antwoord aan te geven:</small></p>\r\n                                                ");
                EndContext();
                BeginContext(6812, 93, false);
#line 114 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                           Write(Html.HiddenFor(x => x.PagesList[i].Questions[j].GeoCodeAnswer, new { required = "required" }));

#line default
#line hidden
                EndContext();
                BeginContext(6905, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 115 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                 switch (Model.PagesList[i].Questions[j].GeoType)
                                                {
                                                    case GeoTypeEnum.Marker:

#line default
#line hidden
                BeginContext(7135, 221, true);
                WriteLiteral("                                                        <div style=\"width: 30px; height: 30px; margin-left: 10px; display: inline-block;\" class=\"marker\">\r\n\r\n                                                        </div>\r\n");
                EndContext();
#line 121 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                        break;
                                                    case GeoTypeEnum.Lijn:

#line default
#line hidden
                BeginContext(7496, 223, true);
                WriteLiteral("                                                        <div style=\"width: 30px; height: 30px; margin-left: 10px; display: inline-block;\" class=\"polyline\">\r\n\r\n                                                        </div>\r\n");
                EndContext();
#line 126 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                        break;
                                                    case GeoTypeEnum.Vlak:

#line default
#line hidden
                BeginContext(7859, 222, true);
                WriteLiteral("                                                        <div style=\"width: 30px; height: 30px; margin-left: 10px; display: inline-block;\" class=\"polygon\">\r\n\r\n                                                        </div>\r\n");
                EndContext();
#line 131 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                        break;
                                                }

#line default
#line hidden
                BeginContext(8196, 213, true);
                WriteLiteral("                                                <p><small>(Verkeerd geplaatst? Geen probleem klik op uw markering en vervolgens op de gele knop.)</small></p>\r\n\r\n                                            </div>\r\n");
                EndContext();
#line 136 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"

                                        if (questionView.StartLocationLat != null)
                                        { 

#line default
#line hidden
                BeginContext(8539, 48, true);
                WriteLiteral("                                            <div");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 8587, "\"", 8601, 2);
                WriteAttributeValue("", 8592, "mapid", 8592, 5, true);
#line 139 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 8597, i, 8597, 4, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("onclick", " onclick=\"", 8602, "\"", 8636, 3);
                WriteAttributeValue("", 8612, "map", 8612, 3, true);
#line 139 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 8615, i, 8615, 4, false);

#line default
#line hidden
                WriteAttributeValue("", 8619, ".invalidateSize()", 8619, 17, true);
                EndWriteAttribute();
                BeginContext(8637, 134, true);
                WriteLiteral(" class=\"map\" style=\"height: 800px; margin-left: 60px; margin-right: 60px;\"></div>\r\n                                            <button");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 8771, "\"", 8789, 2);
                WriteAttributeValue("", 8776, "mapButton", 8776, 9, true);
#line 140 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 8785, i, 8785, 4, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(8790, 65, true);
                WriteLiteral(" class=\"mapBtn btn btn-info\">Terug naar het startpunt!</button>\r\n");
                EndContext();
                BeginContext(8857, 115, true);
                WriteLiteral("                                            <script>\r\n                                                var mapCenter");
                EndContext();
                BeginContext(8974, 1, false);
#line 143 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                         Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(8976, 69, true);
                WriteLiteral(" = [\r\n                                                    parseFloat(");
                EndContext();
                BeginContext(9046, 29, false);
#line 144 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                          Write(questionView.StartLocationLat);

#line default
#line hidden
                EndContext();
                BeginContext(9075, 67, true);
                WriteLiteral("),\r\n                                                    parseFloat(");
                EndContext();
                BeginContext(9143, 30, false);
#line 145 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                          Write(questionView.StartLocationLong);

#line default
#line hidden
                EndContext();
                BeginContext(9173, 116, true);
                WriteLiteral(")\r\n                                                ];\r\n\r\n                                                var mapZoom");
                EndContext();
                BeginContext(9291, 1, false);
#line 148 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                       Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9293, 3, true);
                WriteLiteral(" = ");
                EndContext();
                BeginContext(9297, 27, false);
#line 148 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                             Write(questionView.StartZoomLevel);

#line default
#line hidden
                EndContext();
                BeginContext(9324, 72, true);
                WriteLiteral(";\r\n                                                console.log(mapCenter");
                EndContext();
                BeginContext(9398, 1, false);
#line 149 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                 Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9400, 71, true);
                WriteLiteral(");\r\n                                                console.log(mapZoom");
                EndContext();
                BeginContext(9473, 1, false);
#line 150 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                               Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9475, 61, true);
                WriteLiteral(");\r\n\r\n                                                var map");
                EndContext();
                BeginContext(9538, 1, false);
#line 152 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                   Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9540, 15, true);
                WriteLiteral(" = L.map(\'mapid");
                EndContext();
                BeginContext(9557, 1, false);
#line 152 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                      Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9559, 20, true);
                WriteLiteral("\').setView(mapCenter");
                EndContext();
                BeginContext(9581, 1, false);
#line 152 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                              Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9583, 499, true);
                WriteLiteral(@", 13);
                                                var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
                                                    {
                                                        maxZoom: 19,
                                                        attribution: '&copy; <a href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'
                                                    }).addTo(map");
                EndContext();
                BeginContext(10084, 1, false);
#line 157 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                            Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10086, 72, true);
                WriteLiteral(");\r\n\r\n                                                var editableLayers");
                EndContext();
                BeginContext(10160, 1, false);
#line 159 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                              Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10162, 78, true);
                WriteLiteral("  = new L.FeatureGroup();\r\n                                                map");
                EndContext();
                BeginContext(10242, 1, false);
#line 160 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                               Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10244, 24, true);
                WriteLiteral(".addLayer(editableLayers");
                EndContext();
                BeginContext(10270, 1, false);
#line 160 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                           Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10272, 83, true);
                WriteLiteral(" );\r\n\r\n                                                setTimeout(function () { map");
                EndContext();
                BeginContext(10357, 1, false);
#line 162 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                        Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10359, 100, true);
                WriteLiteral(".invalidateSize() }, 1000);\r\n\r\n                                                var drawPluginOptions");
                EndContext();
                BeginContext(10461, 1, false);
#line 164 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                 Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10463, 2402, true);
                WriteLiteral(@" = {
                                                    position: 'topright',
                                                    draw: {
                                                        polygon: {
                                                            allowIntersection: false,
                                                            drawError: {
                                                                color: '#f73e3e',
                                                                message: '<strong>Oh snap!<strong> you can\'t draw that!'
                                                            },
                                                            shapeOptions: {
                                                                color: '#ffa33b'
                                                            }
                                                        },
                                                        polyline: {
                                ");
                WriteLiteral(@"                            allowIntersection: false,
                                                            drawError: {
                                                                color: '#f73e3e',
                                                                message: '<strong>Oh snap!<strong> you can\'t draw that!'
                                                            },
                                                            shapeOptions: {
                                                                color: '#ffa33b'
                                                            }
                                                        },
                                                        circle: false,
                                                        rectangle: false,
                                                        marker: {
                                                            tooltip: {
                                                         ");
                WriteLiteral(@"       start: '- your text-.'
                                                            }
                                                        }
                                                    },
                                                    edit: {
                                                        featureGroup: editableLayers");
                EndContext();
                BeginContext(12867, 1, false);
#line 196 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(12869, 246, true);
                WriteLiteral(",\r\n                                                        remove: false\r\n                                                    }\r\n                                                };\r\n\r\n                                                var drawControl");
                EndContext();
                BeginContext(13117, 1, false);
#line 201 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                           Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(13119, 40, true);
                WriteLiteral("  = new L.Control.Draw(drawPluginOptions");
                EndContext();
                BeginContext(13161, 1, false);
#line 201 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                                       Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(13163, 55, true);
                WriteLiteral(");\r\n                                                map");
                EndContext();
                BeginContext(13220, 1, false);
#line 202 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                               Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(13222, 23, true);
                WriteLiteral(".addControl(drawControl");
                EndContext();
                BeginContext(13247, 1, false);
#line 202 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                          Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(13249, 72, true);
                WriteLiteral(");\r\n\r\n                                                var editableLayers");
                EndContext();
                BeginContext(13323, 1, false);
#line 204 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                              Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(13325, 78, true);
                WriteLiteral("  = new L.FeatureGroup();\r\n                                                map");
                EndContext();
                BeginContext(13405, 1, false);
#line 205 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                               Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(13407, 24, true);
                WriteLiteral(".addLayer(editableLayers");
                EndContext();
                BeginContext(13433, 1, false);
#line 205 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                           Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(13435, 63, true);
                WriteLiteral(");\r\n\r\n                                                var layer");
                EndContext();
                BeginContext(13500, 1, false);
#line 207 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                     Write(j);

#line default
#line hidden
                EndContext();
                BeginContext(13502, 56, true);
                WriteLiteral(";\r\n\r\n                                                map");
                EndContext();
                BeginContext(13560, 1, false);
#line 209 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                               Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(13562, 244, true);
                WriteLiteral(".on(\'draw:created\', function (e) {\r\n                                                    var type = e.layerType,\r\n                                                        layer = e.layer;\r\n                                                    layer");
                EndContext();
                BeginContext(13808, 1, false);
#line 212 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                     Write(j);

#line default
#line hidden
                EndContext();
                BeginContext(13810, 1053, true);
                WriteLiteral(@" = layer;
                                                    layer.bindPopup('<button class=""btn btn-warning"" type=""button"" onclick=""editMapItem( '+questionId +')"" >Plaats Opnieuw!</button>');
                                                    switch (type) {
                                                    case ""marker"":
                                                        geoAnswer = layer.getLatLng();
                                                        break;
                                                    case ""polyline"":
                                                        geoAnswer = layer.getLatLngs();
                                                        break;
                                                    case ""polygon"":
                                                        geoAnswer = layer.getLatLngs();
                                                        break;
                                                    }

                                     ");
                WriteLiteral("               editableLayers");
                EndContext();
                BeginContext(14865, 1, false);
#line 226 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                              Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(14867, 330, true);
                WriteLiteral(@".addLayer(layer);
                                                    $('#' + questionId).children()[0].value = geoAnswer;
                                                    $('#' + questionId).hide();
                                                });

                                                var drawButtonsForMap");
                EndContext();
                BeginContext(15199, 1, false);
#line 231 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                 Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(15201, 14, true);
                WriteLiteral(" = drawControl");
                EndContext();
                BeginContext(15217, 1, false);
#line 231 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                   Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(15219, 125, true);
                WriteLiteral(".getContainer();\r\n                                                \r\n\r\n                                            </script>\r\n");
                EndContext();
#line 235 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                        }


                                        break;
                                }

#line default
#line hidden
                BeginContext(15474, 36, true);
                WriteLiteral("                            </div>\r\n");
                EndContext();
#line 241 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                        }

#line default
#line hidden
                BeginContext(15537, 28, true);
                WriteLiteral("                    </div>\r\n");
                EndContext();
#line 243 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                }

            }

#line default
#line hidden
                BeginContext(15601, 216, true);
                WriteLiteral("            \r\n            <div class=\"row\">\r\n                <div id=\"previousButtonDiv\" class=\"col\">\r\n                    <p>Vorige</p>\r\n                    <button id=\"previousPageButton\">\r\n                        ");
                EndContext();
                BeginContext(15817, 92, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "440d1f02d84744d6a14eb037c7f0b121", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15909, 224, true);
                WriteLiteral("\r\n                    </button>\r\n                </div>\r\n\r\n                <div id=\"nextButtonDiv\" class=\"col\">\r\n                    <p>Volgende</p>\r\n                    <button id=\"nextPageButton\">\r\n                        ");
                EndContext();
                BeginContext(16133, 92, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c7fd25a904c14d35b128db289a84bdf8", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(16225, 5192, true);
                WriteLiteral(@"
                    </button>
                </div>
                
                <input id=""submitBtn"" type=""submit"" value=""Voltooi!"" class=""btn btn-success""/>
            </div>


        </div>
    </div>

<script>

    var questionId;
    var geoAnswer;

    function editMapItem(questionId) {
        var mapId = $(questionId).attr('id').toString().split(""_"")[0].toString().split(""page"")[1];
        var questionIdNumber = $(questionId).attr('id').toString().split(""_"")[1].toString().split(""question"")[1];
        window[""map"" + mapId].removeLayer(window[""layer"" + questionIdNumber]);
        $(questionId).show();
    }

    $(document).ready(function () {

        $("".leaflet-draw-edit-edit.leaflet-disabled"").hide();

        var allGeoDivs = document.getElementsByClassName(""geoDraw"");

        for (var i = 0; i < allGeoDivs.length; i++) {

            var geoDiv = allGeoDivs[i];

            var mapId = $(geoDiv).attr('id').toString().split(""_"")[0].toString().split(""page""");
                WriteLiteral(@")[1];

            var drawControls = window[""drawButtonsForMap"" + mapId];

            for (var i = 0; i < allGeoDivs.length; i++) {
                var containerDiv = $(allGeoDivs[i]).children()[1];
                var buttons = $(drawControls).children()[0].children()[0].children();
                switch ($(containerDiv).attr('class')) {
                case ""marker"":
                    $(buttons[0]).hide();
                    $(buttons[1]).hide();
                    break;
                case ""polyline"":
                    $(buttons[1]).hide();
                    $(buttons[2]).hide();
                    break;
                case ""polygon"":
                    $(buttons[0]).hide();
                    $(buttons[2]).hide();
                    break;
                }
        }

        $("".leaflet-draw-draw-marker"").click(function (e) {
            questionId = $(this).parent().parent().parent().parent().parent()[0].id;
        });

        $("".leaflet-draw-draw-polylin");
                WriteLiteral(@"e"").click(function (e) {
            questionId = $(this).parent().parent().parent().parent().parent()[0].id;
        });

        $("".leaflet-draw-draw-polygon"").click(function (e) {
            questionId = $(this).parent().parent().parent().parent().parent()[0].id;
        });

        $(""#submitBtn"").hide();

        var pageNumber = 0;
        var maxNumber = $(""#overview"").children().first().children(""div"").length;
        var pageDivs = $(""#overview"").children().first().children(""div"");

        if (pageNumber == 0) {
            $(""#previousButtonDiv"").hide();
        }

        $("".mapBtn"").click(function (e) {
            e.preventDefault();
            var mapId = $(this).attr('id').split(""mapButton"").pop();
            console.log(mapId);
            window[""map"" + mapId].setView(window[""mapCenter"" + mapId]);
            window[""map"" + mapId].setZoom(window[""mapZoom"" + mapId]);
            return false;
        });

        $(""#pageCounter"").text(""Pagina: 1/"" + maxNumber");
                WriteLiteral(@");

        $(""#nextPageButton"").click(function (e) {
            e.preventDefault();
            pageNumber++;
            if (pageNumber > 0) {
                $(""#previousButtonDiv"").show();
            }
            for (var i = 0; i < maxNumber; i++) {
                if (i == pageNumber) {
                    $(pageDivs[i]).fadeIn();
                } else {
                    $(pageDivs[i]).hide();
                }
            }

            if (pageNumber + 1 == maxNumber) {
                $(""#submitBtn"").show();
                $(""#nextButtonDiv"").hide();
            }
            $(""#pageCounter"").text(""Pagina: "" + (pageNumber + 1) + ""/"" + maxNumber);

            return false;
        });

        $(""#previousPageButton"").click(function (e) {
            e.preventDefault();
            if (pageNumber > 0) {
                pageNumber--;
                $(""#nextButtonDiv"").show();
                $(""#submitBtn"").hide();
            }
            for (var i = 0; i <");
                WriteLiteral(@" maxNumber; i++) {
                if (i == pageNumber) {
                    $(pageDivs[i]).fadeIn();
                } else {
                    $(pageDivs[i]).hide();
                }
            }
            if (pageNumber == 0) {
                $(""#previousButtonDiv"").hide();
            }
            $(""#pageCounter"").text(""Pagina: "" + (pageNumber + 1) + ""/"" + maxNumber);
            return false;
        });

        $('.oneChecboxDiv input[type=""checkbox""]').on('change', function () {
            $(this).siblings('.oneChecboxDiv input[type=""checkbox""]').not(this).prop('checked', false);
        });

        $(function () {
            var requiredCheckboxes = $('.oneChecboxDiv input:checkbox[required]');
            requiredCheckboxes.change(function () {
                if (requiredCheckboxes.is(':checked')) {
                    requiredCheckboxes.removeAttr('required');
                } else {
                    requiredCheckboxes.attr('required', 'required');
       ");
                WriteLiteral("         }\r\n            });\r\n        });\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n</script>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(21424, 11, true);
            WriteLiteral("\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<WBK.Models.Create.SurveyViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
