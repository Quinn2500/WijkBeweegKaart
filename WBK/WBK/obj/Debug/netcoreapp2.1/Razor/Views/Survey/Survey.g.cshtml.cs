#pragma checksum "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f2f554f3fc313bdddac5e78f846cb4229f7bc13d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Survey_Survey), @"mvc.1.0.view", @"/Views/Survey/Survey.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Survey/Survey.cshtml", typeof(AspNetCore.Views_Survey_Survey))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK;

#line default
#line hidden
#line 2 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK.Models;

#line default
#line hidden
#line 5 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
using DataModels;

#line default
#line hidden
#line 6 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
using DataModels.Questions;

#line default
#line hidden
#line 7 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
using WBK.Models.Create;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f2f554f3fc313bdddac5e78f846cb4229f7bc13d", @"/Views/Survey/Survey.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d0bc4e9b17a8b143e226c8e7b1c445550acc752", @"/Views/_ViewImports.cshtml")]
    public class Views_Survey_Survey : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<WBK.Models.Create.SurveyViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery.appear-master/index.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/css/bootstrap.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/WijkBeweegKaart Logo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("WijkBeweegKaart"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 80px; width: 360px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/pijlLinks.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 80px; width: 120px; object-fit: contain"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/pijlRechts.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("p-0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 100%;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
  
    Layout = "";

#line default
#line hidden
            BeginContext(25, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(143, 88, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html style=\"height: 100%; overflow-y: scroll; overflow-x: hidden\">\r\n");
            EndContext();
            BeginContext(231, 927, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "149a75b18c764db0bb994e49cc1d7324", async() => {
                BeginContext(237, 536, true);
                WriteLiteral(@"
    <meta charset=""utf-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <title>WijkBeweegKaart</title>

    <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"" />
    <script src=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.js""></script>

    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.css"" />
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.js""></script>

    ");
                EndContext();
                BeginContext(773, 51, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "832f1ad25a814134a2cd097fb28f6e03", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(824, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(830, 62, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c12b788832f44aadbdfca7cb91cd689e", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(892, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(898, 56, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5ac3e48780b14e20885623f3d97ecb78", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(954, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(960, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6d68e086d9e9449abb21b01e4e58e198", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1019, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1025, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "81afb1da519f4c06a89a9db7e030fcc1", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1096, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(1102, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "5d7519c0bc464956a78696054898a028", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1149, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1158, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(1162, 18267, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0aa4de8801254eedb3fe2ac9743c4dbc", async() => {
                BeginContext(1202, 131, true);
                WriteLiteral("\r\n    <nav class=\"navbar navbar-light\" style=\"background-color: #F9A11B;\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n            ");
                EndContext();
                BeginContext(1333, 105, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6264dba0e7e246d1818f8716d2390622", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1438, 236, true);
                WriteLiteral("\r\n        </a>\r\n        <h3 id=\"pageCounter\">Pagina: 0/0</h3>\r\n    </nav>\r\n\r\n<div class=\"container-fluid p-0 row h-75\">\r\n\r\n        <div id=\"overview\" class=\"col-12 my-auto justify-content-center text-center\" style=\"overflow: visible\">\r\n");
                EndContext();
#line 42 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
             using (Html.BeginForm("Survey", "Survey", FormMethod.Post, new { @class = "" }))
            {
                

#line default
#line hidden
                BeginContext(1801, 23, false);
#line 44 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
           Write(Html.AntiForgeryToken());

#line default
#line hidden
                EndContext();
                BeginContext(1845, 54, false);
#line 46 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
           Write(Html.HiddenFor(x => x.Title, new {value= Model.Title}));

#line default
#line hidden
                EndContext();
                BeginContext(1903, 141, true);
                WriteLiteral("                <div id=\"introDiv\">\r\n                    <div class=\"pageText w-50\" style=\"margin-left: 25%\">\r\n\r\n                        <h1>");
                EndContext();
                BeginContext(2045, 33, false);
#line 51 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                       Write(Html.DisplayTextFor(x => x.Title));

#line default
#line hidden
                EndContext();
                BeginContext(2078, 34, true);
                WriteLiteral("</h1>\r\n                        <p>");
                EndContext();
                BeginContext(2113, 17, false);
#line 52 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                      Write(Model.Description);

#line default
#line hidden
                EndContext();
                BeginContext(2130, 5, true);
                WriteLiteral("<p>\r\n");
                EndContext();
#line 53 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                         if (Model.ImageUrl != null)
                        {

#line default
#line hidden
                BeginContext(2216, 32, true);
                WriteLiteral("                            <img");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 2248, "\"", 2269, 1);
#line 55 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 2254, Model.ImageUrl, 2254, 15, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2270, 61, true);
                WriteLiteral(" style=\'height: 200px; width: 200px; object-fit: contain\'/>\r\n");
                EndContext();
#line 56 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                        }

#line default
#line hidden
                BeginContext(2358, 56, true);
                WriteLiteral("\r\n                    </div>\r\n\r\n                </div>\r\n");
                EndContext();
#line 61 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                for (int i = 0; i < Model.PagesList.Count; i++)
                {
                    PageViewModel pageView = Model.PagesList[i];
                    Model.PagesList[i] = pageView;

#line default
#line hidden
                BeginContext(2616, 183, true);
                WriteLiteral("                    <div class=\"pageDivSurvey\" style=\"display: none\">\r\n                        <div class=\"pageText w-50\" style=\"margin-left: 25%\">\r\n\r\n                            <h2>");
                EndContext();
                BeginContext(2800, 14, false);
#line 68 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                           Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(2814, 7, true);
                WriteLiteral("</h2>\r\n");
                EndContext();
#line 69 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                             if (pageView.ImageUrl != null)
                            {

#line default
#line hidden
                BeginContext(2913, 36, true);
                WriteLiteral("                                <img");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 2949, "\"", 2973, 1);
#line 71 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 2955, pageView.ImageUrl, 2955, 18, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2974, 55, true);
                WriteLiteral(" width=\"400\" height=\"400\" style=\"object-fit: none;\"/>\r\n");
                EndContext();
#line 72 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                            }

#line default
#line hidden
                BeginContext(3060, 31, true);
                WriteLiteral("                            <p>");
                EndContext();
                BeginContext(3092, 20, false);
#line 73 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                          Write(pageView.Description);

#line default
#line hidden
                EndContext();
                BeginContext(3112, 68, true);
                WriteLiteral("</p>\r\n\r\n                        </div>\r\n                    </div>\r\n");
                EndContext();
                BeginContext(3182, 24, true);
                WriteLiteral("                    <div");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 3206, "\"", 3222, 2);
                WriteAttributeValue("", 3211, "pageDiv", 3211, 7, true);
#line 78 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 3218, i, 3218, 4, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(3223, 70, true);
                WriteLiteral(" class=\"questionDivSurvey\"  style=\"display: none; margin-top:20px;\">\r\n");
                EndContext();
#line 79 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                         for (int j = 0; j < pageView.Questions.Count; j++)
                        {

#line default
#line hidden
                BeginContext(3397, 48, true);
                WriteLiteral("                        <div class=\"question\">\r\n");
                EndContext();
#line 82 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                               QuestionViewModel questionView = pageView.Questions[j]; 

#line default
#line hidden
                BeginContext(3535, 44, true);
                WriteLiteral("                            <h3 name=\"name\">");
                EndContext();
                BeginContext(3580, 18, false);
#line 83 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                       Write(questionView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(3598, 7, true);
                WriteLiteral("</h3>\r\n");
                EndContext();
#line 84 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                             if (questionView.ImageUrl != null)
                            {

#line default
#line hidden
                BeginContext(3701, 36, true);
                WriteLiteral("                                <img");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 3737, "\"", 3765, 1);
#line 86 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 3743, questionView.ImageUrl, 3743, 22, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(3766, 56, true);
                WriteLiteral(" width=\"400\" height=\"400\" style=\"object-fit: none;\" />\r\n");
                EndContext();
#line 87 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                            }

#line default
#line hidden
                BeginContext(3853, 31, true);
                WriteLiteral("                            <p>");
                EndContext();
                BeginContext(3885, 24, false);
#line 88 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                          Write(questionView.Description);

#line default
#line hidden
                EndContext();
                BeginContext(3909, 6, true);
                WriteLiteral("</p>\r\n");
                EndContext();
#line 89 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                             switch (questionView.Type)
                            {
                                case TypeEnum.OpenVraag:
                                    

#line default
#line hidden
                BeginContext(4098, 60, false);
#line 92 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                               Write(Html.TextBoxFor(x => x.PagesList[i].Questions[j].TextAnswer));

#line default
#line hidden
                EndContext();
#line 92 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                                 
                                    break;
                                case TypeEnum.SliderVraag:

#line default
#line hidden
                BeginContext(4264, 43, true);
                WriteLiteral("                                    <label>");
                EndContext();
                BeginContext(4308, 45, false);
#line 95 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                      Write(Model.PagesList[i].Questions[j].SliderMinText);

#line default
#line hidden
                EndContext();
                BeginContext(4353, 10, true);
                WriteLiteral("</label>\r\n");
                EndContext();
                BeginContext(4400, 148, false);
#line 96 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                               Write(Html.TextBoxFor(x => x.PagesList[i].Questions[j].NumberAnswer, new { type = "range", min = 0, max = Model.PagesList[i].Questions[j].SliderScaleVal}));

#line default
#line hidden
                EndContext();
                BeginContext(4550, 43, true);
                WriteLiteral("                                    <label>");
                EndContext();
                BeginContext(4594, 45, false);
#line 97 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                      Write(Model.PagesList[i].Questions[j].SliderMaxText);

#line default
#line hidden
                EndContext();
                BeginContext(4639, 10, true);
                WriteLiteral("</label>\r\n");
                EndContext();
#line 98 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                    break;
                                case TypeEnum.NummerVraag:
                                    

#line default
#line hidden
                BeginContext(4790, 183, false);
#line 100 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                               Write(Html.TextBoxFor(x => x.PagesList[i].Questions[j].NumberAnswer, new { type = "number", min = Model.PagesList[i].Questions[j].MinValue, max = Model.PagesList[i].Questions[j].MaxValue }));

#line default
#line hidden
                EndContext();
#line 100 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                                                                                                                                                            
                                    break;
                                case TypeEnum.MeerkeuzeVraag:
                                    if (Model.PagesList[i].Questions[j].AllowMultipleAnswers)
                                    {
                                        for (int q = 0; q < Model.PagesList[i].Questions[j].Options.Count; q++)
                                        {
                                            

#line default
#line hidden
                BeginContext(5417, 70, false);
#line 107 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                       Write(Html.CheckBoxFor(x => x.PagesList[i].Questions[j].Options[q].Selected));

#line default
#line hidden
                EndContext();
                BeginContext(5489, 51, true);
                WriteLiteral("                                            <label>");
                EndContext();
                BeginContext(5541, 49, false);
#line 108 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                              Write(Model.PagesList[i].Questions[j].Options[q].Answer);

#line default
#line hidden
                EndContext();
                BeginContext(5590, 58, true);
                WriteLiteral("</label>\r\n                                            <img");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 5648, "\"", 5706, 1);
#line 109 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 5654, Model.PagesList[i].Questions[j].Options[q].ImageUrl, 5654, 52, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(5707, 103, true);
                WriteLiteral(" width=\"150\" height=\"150\" style=\"object-fit: none;\" />\r\n                                            <p>");
                EndContext();
                BeginContext(5811, 54, false);
#line 110 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                          Write(Model.PagesList[i].Questions[j].Options[q].Description);

#line default
#line hidden
                EndContext();
                BeginContext(5865, 6, true);
                WriteLiteral("</p>\r\n");
                EndContext();
#line 111 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                        }
                                    }
                                    else
                                    {

#line default
#line hidden
                BeginContext(6034, 69, true);
                WriteLiteral("                                        <div class=\"oneChecboxDiv\">\r\n");
                EndContext();
#line 116 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                             for (int q = 0; q < Model.PagesList[i].Questions[j].Options.Count; q++)
                                            {
                                                

#line default
#line hidden
                BeginContext(6317, 70, false);
#line 118 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                           Write(Html.CheckBoxFor(x => x.PagesList[i].Questions[j].Options[q].Selected));

#line default
#line hidden
                EndContext();
                BeginContext(6389, 55, true);
                WriteLiteral("                                                <label>");
                EndContext();
                BeginContext(6445, 49, false);
#line 119 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                  Write(Model.PagesList[i].Questions[j].Options[q].Answer);

#line default
#line hidden
                EndContext();
                BeginContext(6494, 62, true);
                WriteLiteral("</label>\r\n                                                <img");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 6556, "\"", 6614, 1);
#line 120 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 6562, Model.PagesList[i].Questions[j].Options[q].ImageUrl, 6562, 52, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(6615, 107, true);
                WriteLiteral(" width=\"150\" height=\"150\" style=\"object-fit: none;\" />\r\n                                                <p>");
                EndContext();
                BeginContext(6723, 54, false);
#line 121 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                              Write(Model.PagesList[i].Questions[j].Options[q].Description);

#line default
#line hidden
                EndContext();
                BeginContext(6777, 6, true);
                WriteLiteral("</p>\r\n");
                EndContext();
#line 122 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                            }

#line default
#line hidden
                BeginContext(6830, 48, true);
                WriteLiteral("                                        </div>\r\n");
                EndContext();
#line 124 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                    }
                                    break;
                                case TypeEnum.GeoVraag:


#line default
#line hidden
                BeginContext(7020, 44, true);
                WriteLiteral("                                        <div");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 7064, "\"", 7090, 4);
                WriteAttributeValue("", 7069, "page", 7069, 4, true);
#line 128 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 7073, i, 7073, 4, false);

#line default
#line hidden
                WriteAttributeValue("", 7077, "_question", 7077, 9, true);
#line 128 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 7086, j, 7086, 4, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(7091, 19, true);
                WriteLiteral(" class=\"geoDraw\">\r\n");
                EndContext();
#line 129 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                             switch (Model.PagesList[i].Questions[j].GeoType)
                                            {
                                                case GeoTypeEnum.Marker:

#line default
#line hidden
                BeginContext(7326, 278, true);
                WriteLiteral(@"                                                    <button type=""button"" class=""btn btn-primary btn-sm drawMarker"">Zet Marker</button>
                                                    <button type=""button"" class=""btn btn-danger btn-sm cancelMarker"">Cancel Marker</button>
");
                EndContext();
#line 134 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                    break;
                                                case GeoTypeEnum.Lijn:

#line default
#line hidden
                BeginContext(7736, 274, true);
                WriteLiteral(@"                                                    <button type=""button"" class=""btn btn-primary btn-sm  drawLine"">Teken Lijn</button>
                                                    <button type=""button"" class=""btn btn-danger btn-sm  cancelLine"">Cancel Lijn</button>
");
                EndContext();
#line 138 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"

                                                    break;
                                                case GeoTypeEnum.Vlak:

#line default
#line hidden
                BeginContext(8144, 280, true);
                WriteLiteral(@"                                                    <button type=""button"" class=""btn btn-primary btn-sm  drawPolygon"">Teken Vlak</button>
                                                    <button type=""button"" class=""btn btn-danger btn-sm  cancelPolygon"">Cancel Vlak</button>
");
                EndContext();
#line 143 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                    break;
                                            }

#line default
#line hidden
                BeginContext(8531, 199, true);
                WriteLiteral("                                            <p><small>(Verkeerd geplaatst? Geen probleem klik op uw markering en vervolgens op de gele knop.)</small></p>\r\n                                            ");
                EndContext();
                BeginContext(8731, 63, false);
#line 146 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                       Write(Html.TextBoxFor(x => x.PagesList[i].Questions[j].GeoCodeAnswer));

#line default
#line hidden
                EndContext();
                BeginContext(8794, 50, true);
                WriteLiteral("\r\n                                        </div>\r\n");
                EndContext();
#line 148 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"


                                    if (questionView.StartLocationLat != null)
                                    {


#line default
#line hidden
                BeginContext(8969, 44, true);
                WriteLiteral("                                        <div");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 9013, "\"", 9027, 2);
                WriteAttributeValue("", 9018, "mapid", 9018, 5, true);
#line 153 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 9023, i, 9023, 4, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("onclick", " onclick=\"", 9028, "\"", 9062, 3);
                WriteAttributeValue("", 9038, "map", 9038, 3, true);
#line 153 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 9041, i, 9041, 4, false);

#line default
#line hidden
                WriteAttributeValue("", 9045, ".invalidateSize()", 9045, 17, true);
                EndWriteAttribute();
                BeginContext(9063, 130, true);
                WriteLiteral(" class=\"map\" style=\"height: 800px; margin-left: 60px; margin-right: 60px;\"></div>\r\n                                        <button");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 9193, "\"", 9211, 2);
                WriteAttributeValue("", 9198, "mapButton", 9198, 9, true);
#line 154 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
WriteAttributeValue("", 9207, i, 9207, 4, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(9212, 65, true);
                WriteLiteral(" class=\"mapBtn btn btn-info\">Terug naar het startpunt!</button>\r\n");
                EndContext();
                BeginContext(9279, 107, true);
                WriteLiteral("                                        <script>\r\n                                            var mapCenter");
                EndContext();
                BeginContext(9388, 1, false);
#line 157 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                     Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9390, 65, true);
                WriteLiteral(" = [\r\n                                                parseFloat(");
                EndContext();
                BeginContext(9456, 29, false);
#line 158 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                      Write(questionView.StartLocationLat);

#line default
#line hidden
                EndContext();
                BeginContext(9485, 63, true);
                WriteLiteral("),\r\n                                                parseFloat(");
                EndContext();
                BeginContext(9549, 30, false);
#line 159 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                      Write(questionView.StartLocationLong);

#line default
#line hidden
                EndContext();
                BeginContext(9579, 108, true);
                WriteLiteral(")\r\n                                            ];\r\n\r\n                                            var mapZoom");
                EndContext();
                BeginContext(9689, 1, false);
#line 162 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                   Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9691, 3, true);
                WriteLiteral(" = ");
                EndContext();
                BeginContext(9695, 27, false);
#line 162 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                         Write(questionView.StartZoomLevel);

#line default
#line hidden
                EndContext();
                BeginContext(9722, 68, true);
                WriteLiteral(";\r\n                                            console.log(mapCenter");
                EndContext();
                BeginContext(9792, 1, false);
#line 163 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                             Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9794, 57, true);
                WriteLiteral(");\r\n\r\n                                            var map");
                EndContext();
                BeginContext(9853, 1, false);
#line 165 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                               Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9855, 15, true);
                WriteLiteral(" = L.map(\'mapid");
                EndContext();
                BeginContext(9872, 1, false);
#line 165 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                  Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9874, 20, true);
                WriteLiteral("\').setView(mapCenter");
                EndContext();
                BeginContext(9896, 1, false);
#line 165 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                          Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9898, 9, true);
                WriteLiteral(", mapZoom");
                EndContext();
                BeginContext(9909, 1, false);
#line 165 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                                       Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(9911, 475, true);
                WriteLiteral(@");
                                            var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
                                                {
                                                    maxZoom: 19,
                                                    attribution: '&copy; <a href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'
                                                }).addTo(map");
                EndContext();
                BeginContext(10388, 1, false);
#line 170 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                        Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10390, 67, true);
                WriteLiteral(");\r\n\r\n                                            var polygonDrawer");
                EndContext();
                BeginContext(10459, 1, false);
#line 172 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                         Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10461, 25, true);
                WriteLiteral(" = new L.Draw.Polygon(map");
                EndContext();
                BeginContext(10488, 1, false);
#line 172 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                      Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10490, 64, true);
                WriteLiteral(");\r\n                                            var markerDrawer");
                EndContext();
                BeginContext(10556, 1, false);
#line 173 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                        Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10558, 24, true);
                WriteLiteral(" = new L.Draw.Marker(map");
                EndContext();
                BeginContext(10584, 1, false);
#line 173 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                    Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10586, 66, true);
                WriteLiteral(");\r\n                                            var polylineDrawer");
                EndContext();
                BeginContext(10654, 1, false);
#line 174 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                          Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10656, 26, true);
                WriteLiteral(" = new L.Draw.Polyline(map");
                EndContext();
                BeginContext(10684, 1, false);
#line 174 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                                                        Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10686, 59, true);
                WriteLiteral(");\r\n\r\n                                            var array");
                EndContext();
                BeginContext(10747, 1, false);
#line 176 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                 Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10749, 57, true);
                WriteLiteral(" = [];\r\n\r\n                                            map");
                EndContext();
                BeginContext(10808, 1, false);
#line 178 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                           Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(10810, 1239, true);
                WriteLiteral(@".on('draw:created', function (e) {
                                                var type = e.layerType,
                                                    layer = e.layer;
                                                layer.bindPopup('<button class=""btn btn-warning"" type=""button"" onclick=""editMapItem( ' + questionId + ')"" >Plaats Opnieuw!</button>');
                                                switch (type) {
                                                case ""marker"":
                                                    geoAnswer = layer.getLatLng();
                                                    break;
                                                case ""polyline"":
                                                    geoAnswer = layer.getLatLngs();
                                                    break;
                                                case ""polygon"":
                                                    geoAnswer = layer.getLatLngs();
                           ");
                WriteLiteral("                         break;\r\n                                                }\r\n                                                isDrawing = false;\r\n                                                layer.addTo(map");
                EndContext();
                BeginContext(12051, 1, false);
#line 194 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                           Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(12053, 308, true);
                WriteLiteral(@");
                                                var questionIdNumber =
                                                    parseInt(questionId.split(""_"")[1]
                                                        .toString().split(""question"")[1]);
                                                array");
                EndContext();
                BeginContext(12363, 1, false);
#line 198 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                                 Write(i);

#line default
#line hidden
                EndContext();
                BeginContext(12365, 308, true);
                WriteLiteral(@"[questionIdNumber] = layer;
                                                window.scrollBy(0, 300);
                                                $(""#"" + questionId).children(""input"").val(geoAnswer);
                                            });

                                        </script>
");
                EndContext();
#line 204 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                                    }


                                    break;
                            }

#line default
#line hidden
                BeginContext(12791, 32, true);
                WriteLiteral("                        </div>\r\n");
                EndContext();
#line 210 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                        }

#line default
#line hidden
                BeginContext(12850, 28, true);
                WriteLiteral("                    </div>\r\n");
                EndContext();
#line 212 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"
                }


#line default
#line hidden
                BeginContext(12899, 243, true);
                WriteLiteral("                <section id=\"pageButtons\" class=\"row\">\r\n                    <div id=\"previousButtonDiv\" class=\"col\">\r\n                        <p>Vorige</p>\r\n                        <button id=\"previousPageButton\">\r\n                            ");
                EndContext();
                BeginContext(13142, 92, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "959f556e503d4d8a9959b48e3f7aea1e", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(13234, 248, true);
                WriteLiteral("\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div id=\"nextButtonDiv\" class=\"col\">\r\n                        <p>Volgende</p>\r\n                        <button id=\"nextPageButton\">\r\n                            ");
                EndContext();
                BeginContext(13482, 92, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0077d8a3094543e0aed1d14c81f41b29", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(13574, 345, true);
                WriteLiteral(@"
                        </button>
                    </div>
                
                    <div id=""submitBtn"" class=""col"">
                        <p>Einde Enquete</p>
                        <input type=""submit"" name=""submit"" value=""Voltooi!"" class=""btn btn-success"" />
                    </div>

                </section>
");
                EndContext();
#line 235 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Survey\Survey.cshtml"

            }

#line default
#line hidden
                BeginContext(13936, 5486, true);
                WriteLiteral(@"            


        </div>
</div>

<script>

    var questionId;
    var geoAnswer;
    var isDrawing;
    

    function editMapItem(questionId) {
        var mapId = $(questionId).attr('id').toString().split(""_"")[0].toString().split(""page"")[1];
        var questionIdNumber = $(questionId).attr('id').toString().split(""_"")[1].toString().split(""question"")[1];
        window[""map"" + mapId].removeLayer(window[""array"" + mapId][parseInt(questionIdNumber)]);
        window[""array"" + mapId][parseInt(questionIdNumber)] = null;
        $(questionId).show();
    }

    $(document).ready(function () {

        isDrawing = false;

        $(""#submitBtn"").hide();

        var pageNumber = 0;
        var maxNumber = $(""#overview"").children().first().children(""div"").length;
        var pageDivs = $(""#overview"").children().first().children(""div"");

        if (pageNumber == 0) {
            $(""#previousButtonDiv"").hide();
        }

        $("".mapBtn"").click(function (e) {
            ");
                WriteLiteral(@"e.preventDefault();
            var mapId = $(this).attr('id').split(""mapButton"").pop();
            console.log(mapId);
            window[""map"" + mapId].setView(window[""mapCenter"" + mapId]);
            window[""map"" + mapId].setZoom(window[""mapZoom"" + mapId]);
            return false;
        });

        $("".drawMarker"").click(function (e) {
            if (!isDrawing) {
                isDrawing = true;
                var mapId = $(this).parent().attr('id').toString().split(""_"")[0].toString().split(""page"")[1];
                questionId = $(this).parent().attr('id');
                window[""markerDrawer"" + mapId].enable();
            }
        }); 

        $("".drawLine"").click(function (e) {
            if (!isDrawing) {
                isDrawing = true;
                var mapId = $(this).parent().attr('id').toString().split(""_"")[0].toString().split(""page"")[1];
                questionId = $(this).parent().attr('id');
                window[""polylineDrawer"" + mapId].enable();
 ");
                WriteLiteral(@"           }
        });

        $("".drawPolygon"").click(function (e) {
            if (!isDrawing) {
                isDrawing = true;
                var mapId = $(this).parent().attr('id').toString().split(""_"")[0].toString().split(""page"")[1];
                questionId = $(this).parent().attr('id');
                window[""polygonDrawer"" + mapId].enable();
            }
        });

        $("".cancelPolygon"").click(function (e) {
            var mapId = $(this).parent().attr('id').toString().split(""_"")[0].toString().split(""page"")[1];
            window[""polygonDrawer"" + mapId].disable();
            isDrawing = false;
        });

        $("".cancelPolyline"").click(function (e) {
            var mapId = $(this).parent().attr('id').toString().split(""_"")[0].toString().split(""page"")[1];
            window[""polylineDrawer"" + mapId].disable();
            isDrawing = false;
        });

        $("".cancelMarker"").click(function (e) {
            var mapId = $(this).parent().attr('id')");
                WriteLiteral(@".toString().split(""_"")[0].toString().split(""page"")[1];
            window[""markerDrawer"" + mapId].disable();
            isDrawing = false;
        });


        $(""#pageCounter"").text(""Pagina: 1/"" + maxNumber);

        $(""#nextPageButton"").click(function (e) {
            e.preventDefault();
            pageNumber++;
            if (pageNumber > 0) {
                $(""#previousButtonDiv"").show();
            }
            for (var i = 0; i < maxNumber; i++) {
                if (i == pageNumber) {
                    $(pageDivs[i]).fadeIn();
                } else {
                    $(pageDivs[i]).hide();
                }
            }

            if (pageNumber + 1 == maxNumber) {
                $(""#submitBtn"").show();
                $(""#nextButtonDiv"").hide();
            }
            $(""#pageCounter"").text(""Pagina: "" + (pageNumber + 1) + ""/"" + maxNumber);
            $(""#pageButtons"").show();
            return false;
        });

        $(""#previousPageButton"").c");
                WriteLiteral(@"lick(function (e) {
            e.preventDefault();
            if (pageNumber > 0) {
                pageNumber--;
                $(""#nextButtonDiv"").show();
                $(""#submitBtn"").hide();
            }
            for (var i = 0; i < maxNumber; i++) {
                if (i == pageNumber) {
                    $(pageDivs[i]).fadeIn();
                } else {
                    $(pageDivs[i]).hide();
                }
            }
            if (pageNumber == 0) {
                $(""#previousButtonDiv"").hide();
            }
            $(""#pageCounter"").text(""Pagina: "" + (pageNumber + 1) + ""/"" + maxNumber);
            $(""#pageButtons"").show();
            return false;
        });

        $('.oneChecboxDiv input[type=""checkbox""]').on('change', function () {
            $(this).siblings('.oneChecboxDiv input[type=""checkbox""]').not(this).prop('checked', false);
        });

        $(function () {
            var requiredCheckboxes = $('.oneChecboxDiv input:checkbox[r");
                WriteLiteral(@"equired]');
            requiredCheckboxes.change(function () {
                if (requiredCheckboxes.is(':checked')) {
                    requiredCheckboxes.removeAttr('required');
                } else {
                    requiredCheckboxes.attr('required', 'required');
                }
            });
        });
 

    });




</script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(19429, 11, true);
            WriteLiteral("\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<WBK.Models.Create.SurveyViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
