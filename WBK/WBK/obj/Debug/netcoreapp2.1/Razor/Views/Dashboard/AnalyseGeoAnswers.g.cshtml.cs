#pragma checksum "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "56e7f8c62aefd978c7d50202dedc783f71b269cc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_AnalyseGeoAnswers), @"mvc.1.0.view", @"/Views/Dashboard/AnalyseGeoAnswers.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/AnalyseGeoAnswers.cshtml", typeof(AspNetCore.Views_Dashboard_AnalyseGeoAnswers))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK;

#line default
#line hidden
#line 2 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK.Models;

#line default
#line hidden
#line 7 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels;

#line default
#line hidden
#line 8 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels.Answers;

#line default
#line hidden
#line 9 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels.Questions;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"56e7f8c62aefd978c7d50202dedc783f71b269cc", @"/Views/Dashboard/AnalyseGeoAnswers.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d0bc4e9b17a8b143e226c8e7b1c445550acc752", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_AnalyseGeoAnswers : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DataModels.Survey>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/css/bootstrap.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", "~/css/surveyAnalyze.css", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("include", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/WijkBeweegKaart Logo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("WijkBeweegKaart"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 80px; width: 360px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("p-0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
  
    ViewData["Title"] = "AllAnswers";
    Layout = null;

#line default
#line hidden
            BeginContext(68, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(171, 37, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"nl\">\r\n");
            EndContext();
            BeginContext(208, 805, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3eb7d31e8e9c4cc6addaea4532aab30e", async() => {
                BeginContext(214, 318, true);
                WriteLiteral(@"
    <meta charset=""utf-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <title>WijkBeweegKaart</title>

    <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"" />
    <script src=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.js""></script>

    ");
                EndContext();
                BeginContext(532, 51, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cfbdad63e47f4cf6ae87e505347bf489", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(583, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(589, 62, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "af1199e91fc64036888a41571a0c3bf4", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(651, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(657, 56, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7b8a681e85f3441d86640c28a598dce1", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(713, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(719, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a642560d0fa24abcbad16e7e11e981b8", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(790, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(796, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d98bbcf9a721455fa03512774bec906b", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(843, 12, true);
                WriteLiteral("\r\n    \r\n    ");
                EndContext();
                BeginContext(855, 147, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6603b0316d8d47f2a36c7bc58155f246", async() => {
                    BeginContext(890, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(900, 82, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e1c8cd9cc83c4b3d85e0d08b4a9b99b3", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_6.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
#line 29 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(982, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Include = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1002, 4, true);
                WriteLiteral("\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1013, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(1017, 15132, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "36d5c726d5e14d3b82cecb5e80600779", async() => {
                BeginContext(1035, 131, true);
                WriteLiteral("\r\n    <nav class=\"navbar navbar-light\" style=\"background-color: #F9A11B;\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n            ");
                EndContext();
                BeginContext(1166, 105, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "97b2e28fc13a4bb8a0e42f8601ef46c5", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1271, 81, true);
                WriteLiteral("\r\n        </a>\r\n    </nav>\r\n\r\n    <div class=\"container-fluid p-0\">\r\n        <h1>");
                EndContext();
                BeginContext(1353, 11, false);
#line 42 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
       Write(Model.Title);

#line default
#line hidden
                EndContext();
                BeginContext(1364, 209, true);
                WriteLiteral(" Analyse</h1>\r\n\r\n        <div class=\"row\" style=\"margin-left: 0;\">\r\n            <div class=\"col-9\">\r\n                <div id=\"map\" style=\"height: 600px;\"></div>\r\n                <div style=\"margin-left: 0;\">\r\n");
                EndContext();
#line 48 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                     foreach (Page pageView in Model.Pages)
                    {
                        if (Model.Pages.First() == pageView)
                        {

#line default
#line hidden
                BeginContext(1746, 214, true);
                WriteLiteral("                            <table id=\"first\" style=\"float: left; border: 1px solid black;\">\r\n                                <tr>\r\n                                    <th>\r\n                                        ");
                EndContext();
                BeginContext(1961, 14, false);
#line 55 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                   Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(1975, 178, true);
                WriteLiteral("\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Gebruiker</th>\r\n");
                EndContext();
#line 60 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                     foreach (Question question in pageView.Questions)
                                    {

#line default
#line hidden
                BeginContext(2280, 43, true);
                WriteLiteral("                                        <th");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 2323, "\"", 2350, 2);
                WriteAttributeValue("", 2331, "table", 2331, 5, true);
#line 62 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 2336, question.Id, 2336, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2351, 1, true);
                WriteLiteral(">");
                EndContext();
                BeginContext(2353, 14, false);
#line 62 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                   Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(2367, 7, true);
                WriteLiteral("</th>\r\n");
                EndContext();
#line 63 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                    }

#line default
#line hidden
                BeginContext(2413, 39, true);
                WriteLiteral("                                </tr>\r\n");
                EndContext();
#line 65 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 foreach (Answer asnwer in pageView.Questions[0].Answers)
                                {
                                    Respondant respondant = asnwer.Respondant;

#line default
#line hidden
                BeginContext(2658, 42, true);
                WriteLiteral("                                    <tr>\r\n");
                EndContext();
#line 69 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                         if (Model.Pages.First() == pageView)
                                        {

#line default
#line hidden
                BeginContext(2822, 81, true);
                WriteLiteral("                                            <td style=\"border: 1px solid black;\">");
                EndContext();
                BeginContext(2904, 27, false);
#line 71 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                            Write(asnwer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(2931, 7, true);
                WriteLiteral("</td>\r\n");
                EndContext();
#line 72 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                        }

#line default
#line hidden
                BeginContext(2981, 40, true);
                WriteLiteral("                                        ");
                EndContext();
#line 73 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                         foreach (Question question in pageView.Questions)
                                        {
                                            foreach (Answer answer in question.Answers)
                                            {
                                                if (answer.Respondant.SessionId == respondant.SessionId)
                                                {


#line default
#line hidden
                BeginContext(3411, 55, true);
                WriteLiteral("                                                    <td");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 3466, "\"", 3493, 2);
                WriteAttributeValue("", 3474, "table", 3474, 5, true);
#line 80 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 3479, question.Id, 3479, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(3494, 36, true);
                WriteLiteral(" style=\"border: 1px solid black;\">\r\n");
                EndContext();
#line 81 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                         switch (question.Type)
                                                        {
                                                            case TypeEnum.NummerVraag:
                                                                var number = answer as NumberAnswer;
                                                                

#line default
#line hidden
                BeginContext(3925, 18, false);
#line 85 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(number.NumberValue);

#line default
#line hidden
                EndContext();
#line 85 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                   
                                                                break;

                                                            case TypeEnum.SliderVraag:
                                                                var slider = answer as NumberAnswer;
                                                                

#line default
#line hidden
                BeginContext(4274, 18, false);
#line 90 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(slider.NumberValue);

#line default
#line hidden
                EndContext();
#line 90 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                   
                                                                break;

                                                            case TypeEnum.GeoVraag:

#line default
#line hidden
                BeginContext(4453, 80, true);
                WriteLiteral("                                                                <p>Zie Map</p>\r\n");
                EndContext();
#line 95 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                break;

                                                            case TypeEnum.OpenVraag:
                                                                var open = answer as TextAnswer;
                                                                

#line default
#line hidden
                BeginContext(4856, 14, false);
#line 99 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(open.TextValue);

#line default
#line hidden
                EndContext();
#line 99 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                               
                                                                break;

                                                            case TypeEnum.MeerkeuzeVraag:
                                                                var multipleChoiceAnswer = answer as MultipleChoiceAnswer;
                                                                

#line default
#line hidden
                BeginContext(5226, 31, false);
#line 104 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(multipleChoiceAnswer.ToString());

#line default
#line hidden
                EndContext();
#line 104 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                                ;
                                                                break;
                                                        }

#line default
#line hidden
                BeginContext(5391, 59, true);
                WriteLiteral("                                                    </td>\r\n");
                EndContext();
#line 108 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                }
                                            }
                                        }

#line default
#line hidden
                BeginContext(5591, 43, true);
                WriteLiteral("                                    </tr>\r\n");
                EndContext();
#line 112 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                }

#line default
#line hidden
                BeginContext(5669, 38, true);
                WriteLiteral("                            </table>\r\n");
                EndContext();
#line 114 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                        }
                        else
                        {

#line default
#line hidden
                BeginContext(5791, 34, true);
                WriteLiteral("                            <table");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 5825, "\"", 5842, 1);
#line 117 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 5830, pageView.Id, 5830, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(5843, 169, true);
                WriteLiteral(" style=\"float: left; border: 1px solid black;\">\r\n                                <tr>\r\n                                    <th>\r\n                                        ");
                EndContext();
                BeginContext(6013, 14, false);
#line 120 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                   Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(6027, 122, true);
                WriteLiteral("\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n");
                EndContext();
#line 124 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                     foreach (Question question in pageView.Questions)
                                    {

#line default
#line hidden
                BeginContext(6276, 43, true);
                WriteLiteral("                                        <th");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 6319, "\"", 6346, 2);
                WriteAttributeValue("", 6327, "table", 6327, 5, true);
#line 126 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 6332, question.Id, 6332, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(6347, 1, true);
                WriteLiteral(">");
                EndContext();
                BeginContext(6349, 14, false);
#line 126 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                   Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(6363, 7, true);
                WriteLiteral("</th>\r\n");
                EndContext();
#line 127 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                    }

#line default
#line hidden
                BeginContext(6409, 39, true);
                WriteLiteral("                                </tr>\r\n");
                EndContext();
#line 129 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 foreach (Answer asnwer in pageView.Questions[0].Answers)
                                {
                                    Respondant respondant = asnwer.Respondant;

#line default
#line hidden
                BeginContext(6654, 42, true);
                WriteLiteral("                                    <tr>\r\n");
                EndContext();
#line 133 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                         if (Model.Pages.First() == pageView)
                                        {

#line default
#line hidden
                BeginContext(6818, 81, true);
                WriteLiteral("                                            <td style=\"border: 1px solid black;\">");
                EndContext();
                BeginContext(6900, 27, false);
#line 135 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                            Write(asnwer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(6927, 7, true);
                WriteLiteral("</td>\r\n");
                EndContext();
#line 136 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                        }

#line default
#line hidden
                BeginContext(6977, 40, true);
                WriteLiteral("                                        ");
                EndContext();
#line 137 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                         foreach (Question question in pageView.Questions)
                                        {
                                            foreach (Answer answer in question.Answers)
                                            {
                                                if (answer.Respondant.SessionId == respondant.SessionId)
                                                {

#line default
#line hidden
                BeginContext(7405, 55, true);
                WriteLiteral("                                                    <td");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 7460, "\"", 7487, 2);
                WriteAttributeValue("", 7468, "table", 7468, 5, true);
#line 143 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 7473, question.Id, 7473, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(7488, 36, true);
                WriteLiteral(" style=\"border: 1px solid black;\">\r\n");
                EndContext();
#line 144 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                         switch (question.Type)
                                                        {
                                                            case TypeEnum.NummerVraag:
                                                                var number = answer as NumberAnswer;
                                                                

#line default
#line hidden
                BeginContext(7919, 18, false);
#line 148 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(number.NumberValue);

#line default
#line hidden
                EndContext();
#line 148 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                   
                                                                break;

                                                            case TypeEnum.SliderVraag:
                                                                var slider = answer as NumberAnswer;
                                                                

#line default
#line hidden
                BeginContext(8268, 18, false);
#line 153 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(slider.NumberValue);

#line default
#line hidden
                EndContext();
#line 153 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                   
                                                                break;

                                                            case TypeEnum.GeoVraag:
                                                                

#line default
#line hidden
                BeginContext(8517, 7, true);
                WriteLiteral("Zie Map");
                EndContext();
#line 157 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                    
                                                                break;

                                                            case TypeEnum.OpenVraag:
                                                                var open = answer as TextAnswer;
                                                                

#line default
#line hidden
                BeginContext(8856, 14, false);
#line 162 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(open.TextValue);

#line default
#line hidden
                EndContext();
#line 162 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                               
                                                                break;

                                                            case TypeEnum.MeerkeuzeVraag:
                                                                var multipleChoiceAnswer = answer as MultipleChoiceAnswer;
                                                                

#line default
#line hidden
                BeginContext(9226, 31, false);
#line 167 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(multipleChoiceAnswer.ToString());

#line default
#line hidden
                EndContext();
#line 167 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                                ;
                                                                break;
                                                        }

#line default
#line hidden
                BeginContext(9391, 59, true);
                WriteLiteral("                                                    </td>\r\n");
                EndContext();
#line 171 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                }
                                            }
                                        }

#line default
#line hidden
                BeginContext(9591, 43, true);
                WriteLiteral("                                    </tr>\r\n");
                EndContext();
#line 175 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                }

#line default
#line hidden
                BeginContext(9669, 38, true);
                WriteLiteral("                            </table>\r\n");
                EndContext();
#line 177 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                        }
                    }

#line default
#line hidden
                BeginContext(9757, 127, true);
                WriteLiteral("                </div>\r\n            </div>\r\n            <div class=\"col-3\">\r\n                <div style=\"margin-left: 10px;\">\r\n");
                EndContext();
#line 183 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                     foreach (Page pageView in Model.Pages)
                    {

#line default
#line hidden
                BeginContext(9968, 28, true);
                WriteLiteral("                        <h3>");
                EndContext();
                BeginContext(9997, 14, false);
#line 185 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                       Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(10011, 37, true);
                WriteLiteral("</h3>\r\n                        <dl>\r\n");
                EndContext();
#line 187 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                             foreach (Question question in pageView.Questions)
                            {

#line default
#line hidden
                BeginContext(10159, 96, true);
                WriteLiteral("                                <dd>\r\n                                    <input type=\"checkbox\"");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 10255, "\"", 10272, 1);
#line 190 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 10260, question.Id, 10260, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("name", " name=\"", 10273, "\"", 10305, 1);
#line 190 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 10280, question.Type.ToString(), 10280, 25, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("value", " value=\"", 10306, "\"", 10329, 1);
#line 190 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 10314, question.Value, 10314, 15, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(10330, 45, true);
                WriteLiteral(">\r\n                                    <label");
                EndContext();
                BeginWriteAttribute("for", " for=\"", 10375, "\"", 10393, 1);
#line 191 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 10381, question.Id, 10381, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(10394, 2, true);
                WriteLiteral("> ");
                EndContext();
                BeginContext(10397, 14, false);
#line 191 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                          Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(10411, 49, true);
                WriteLiteral("</label>\r\n                                </dd>\r\n");
                EndContext();
#line 193 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                if (question.Type == TypeEnum.GeoVraag)
                                {
                                    var geoQuestion = question as GeoQuestion;

#line default
#line hidden
                BeginContext(10648, 94, true);
                WriteLiteral("                                    <script>\r\n                                    var geoArray");
                EndContext();
                BeginContext(10744, 11, false);
#line 197 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(10756, 55, true);
                WriteLiteral(" = [];\r\n                                    </script>\r\n");
                EndContext();
#line 199 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                    foreach (Answer answer in question.Answers)
                                    {
                                        var geoAnswer = answer as GeoAnswer;
                                        switch (geoQuestion.TypeOfMarker)
                                        {
                                            case GeoTypeEnum.Marker:

#line default
#line hidden
                BeginContext(11197, 212, true);
                WriteLiteral("                                                <script>\r\n                                                $(document).ready(function() {\r\n                                                    var marker = L.marker(");
                EndContext();
                BeginContext(11410, 17, false);
#line 207 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                     Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(11427, 161, true);
                WriteLiteral(").on(\'click\',\r\n                                                        function(e) {\r\n                                                            highlightUser(\"");
                EndContext();
                BeginContext(11590, 27, false);
#line 209 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                       Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(11618, 126, true);
                WriteLiteral("\");\r\n                                                        });\r\n                                                    geoArray");
                EndContext();
                BeginContext(11746, 11, false);
#line 211 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                        Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(11758, 128, true);
                WriteLiteral(".push(marker);\r\n                                                });\r\n                                                </script>\r\n");
                EndContext();
#line 214 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                break;

                                            case GeoTypeEnum.Vlak:

#line default
#line hidden
                BeginContext(12012, 214, true);
                WriteLiteral("                                                <script>\r\n                                                $(document).ready(function() {\r\n                                                    var polygon = L.polygon(");
                EndContext();
                BeginContext(12227, 17, false);
#line 219 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                       Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(12244, 161, true);
                WriteLiteral(").on(\'click\',\r\n                                                        function(e) {\r\n                                                            highlightUser(\"");
                EndContext();
                BeginContext(12407, 27, false);
#line 221 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                       Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(12435, 126, true);
                WriteLiteral("\");\r\n                                                        });\r\n                                                    geoArray");
                EndContext();
                BeginContext(12563, 11, false);
#line 223 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                        Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(12575, 129, true);
                WriteLiteral(".push(polygon);\r\n                                                });\r\n                                                </script>\r\n");
                EndContext();
#line 226 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                break;

                                            case GeoTypeEnum.Lijn:

#line default
#line hidden
                BeginContext(12830, 216, true);
                WriteLiteral("                                                <script>\r\n                                                $(document).ready(function() {\r\n                                                    var polyline = L.polyline(");
                EndContext();
                BeginContext(13047, 17, false);
#line 231 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                         Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(13064, 161, true);
                WriteLiteral(").on(\'click\',\r\n                                                        function(e) {\r\n                                                            highlightUser(\"");
                EndContext();
                BeginContext(13227, 27, false);
#line 233 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                       Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(13255, 126, true);
                WriteLiteral("\");\r\n                                                        });\r\n                                                    geoArray");
                EndContext();
                BeginContext(13383, 11, false);
#line 235 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                        Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(13395, 130, true);
                WriteLiteral(".push(polyline);\r\n                                                });\r\n                                                </script>\r\n");
                EndContext();
#line 238 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                break;
                                        }
                                    }
                                }

                            }

#line default
#line hidden
                BeginContext(13731, 31, true);
                WriteLiteral("                        </dl>\r\n");
                EndContext();
#line 245 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"

                    }

#line default
#line hidden
                BeginContext(13787, 2355, true);
                WriteLiteral(@"                </div>
            </div>
        </div>
       
    </div>

    <script>
        var map = L.map('map').setView([51.47358, 5.453167], 13);
        var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'
        }).addTo(map);

        $('input[type=""checkbox""]').change(function (event) {
            var questionId = $(this).attr('id');
            var type = $(this).attr('name');
            if (type == ""GeoVraag"") {
                if ($(this).is("":checked"")) {
                    window[""geoArray"" + questionId].forEach(addLayer);
                    $('.table' + questionId).show();
                } else {
                    window[""geoArray"" + questionId].forEach(removelayer);
                    $('.table' + questionId).hide();
                }
            } else {
                if ($");
                WriteLiteral(@"(this).is("":checked"")) {
                    $('.table' + questionId).show();
                } else {
                    $('.table' + questionId).hide();
                }
            }
        });

        function highlightUser(sessionId) {
            var rowIndex = 0;
            $('#first tr').each(function() {
                var respondantId = $(this).find(""td"").eq(0).html();
                if (respondantId == sessionId) {
                    rowIndex = $(this).index();
                    console.log(rowIndex);
                }
            });
                                                            
            $('tr').each(function () {
                if ($(this).index() == rowIndex) {
                    $(this).css(""backgroundColor"", ""yellow"");
                    $(this).insertAfter($(this).parent().parent().find('tr').eq(1));
                } else {
                    $(this).css(""backgroundColor"", ""transparent"");
                }

            });
        }");
                WriteLiteral(@"


        $('td, th').click(function() {
            alert($(this).text());
        });
        

        function removelayer(layer, index) {
            map.removeLayer(layer);
        }

        function addLayer(layer, index) {
            map.addLayer(layer);
        }
    </script>

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16149, 13, true);
            WriteLiteral("\r\n</html>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DataModels.Survey> Html { get; private set; }
    }
}
#pragma warning restore 1591
