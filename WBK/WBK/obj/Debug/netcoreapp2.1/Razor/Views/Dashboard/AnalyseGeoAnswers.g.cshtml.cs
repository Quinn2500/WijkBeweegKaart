#pragma checksum "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "dcd3abe367c7b4cab3f9b4b2b385417c055d6fc4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_AnalyseGeoAnswers), @"mvc.1.0.view", @"/Views/Dashboard/AnalyseGeoAnswers.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/AnalyseGeoAnswers.cshtml", typeof(AspNetCore.Views_Dashboard_AnalyseGeoAnswers))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK;

#line default
#line hidden
#line 2 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK.Models;

#line default
#line hidden
#line 7 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels;

#line default
#line hidden
#line 8 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels.Answers;

#line default
#line hidden
#line 9 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels.Questions;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dcd3abe367c7b4cab3f9b4b2b385417c055d6fc4", @"/Views/Dashboard/AnalyseGeoAnswers.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d0bc4e9b17a8b143e226c8e7b1c445550acc752", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_AnalyseGeoAnswers : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DataModels.Survey>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/css/bootstrap.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/js/bootstrap.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", "~/css/surveyAnalyze.css", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("include", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/WijkBeweegKaart Logo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("WijkBeweegKaart"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 80px; width: 360px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("p-0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
  
    ViewData["Title"] = "AllAnswers";
    Layout = null;

#line default
#line hidden
            BeginContext(68, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(171, 37, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"nl\">\r\n");
            EndContext();
            BeginContext(208, 867, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9299044646094a86911b1c909221844e", async() => {
                BeginContext(214, 318, true);
                WriteLiteral(@"
    <meta charset=""utf-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <title>WijkBeweegKaart</title>

    <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"" />
    <script src=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.js""></script>

    ");
                EndContext();
                BeginContext(532, 51, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "09226dfdd3c043e8b7ef0a9c56b561a2", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(583, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(589, 62, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "868d516de8064cda9a02706859b8d8fe", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(651, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(657, 56, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "42f57bea71e24603a19ad9115cd5448e", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(713, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(719, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c4f67d9927184e45a0aaa3a2b6816846", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(790, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(796, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b6727b5adc724d7b9dd4fa98fb1c1b50", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(843, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(849, 60, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d561034efadb4b28b714ec5b741ca79a", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(909, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(917, 147, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "05cd8f20157f4fa18edd9adeb8f2c26d", async() => {
                    BeginContext(952, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(962, 82, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "86f54cd2a00945afa4c3bbdd44c01280", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_7.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
#line 30 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(1044, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Include = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1064, 4, true);
                WriteLiteral("\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1075, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(1079, 22018, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e4fe15c53f7648b9b59364e2d388887b", async() => {
                BeginContext(1097, 131, true);
                WriteLiteral("\r\n    <nav class=\"navbar navbar-light\" style=\"background-color: #F9A11B;\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n            ");
                EndContext();
                BeginContext(1228, 105, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "fb2ef48480ed41f480a6fcdfa7b3aba3", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1333, 119, true);
                WriteLiteral("\r\n        </a>\r\n    </nav>\r\n\r\n    <div class=\"container-fluid p-0\">\r\n        <h1 id=\"title\" style=\"margin-left: 10px;\">");
                EndContext();
                BeginContext(1453, 11, false);
#line 43 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                             Write(Model.Title);

#line default
#line hidden
                EndContext();
                BeginContext(1464, 209, true);
                WriteLiteral(" Analyse</h1>\r\n\r\n        <div class=\"row\" style=\"margin-left: 0;\">\r\n            <div class=\"col-9\">\r\n                <div id=\"map\" style=\"height: 600px;\"></div>\r\n                <div style=\"margin-left: 0;\">\r\n");
                EndContext();
#line 49 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                     foreach (Page pageView in Model.Pages)
                    {
                        if (Model.Pages.First() == pageView)
                        {

#line default
#line hidden
                BeginContext(1846, 214, true);
                WriteLiteral("                            <table id=\"first\" style=\"float: left; border: 1px solid black;\">\r\n                                <tr>\r\n                                    <th>\r\n                                        ");
                EndContext();
                BeginContext(2061, 14, false);
#line 56 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                   Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(2075, 178, true);
                WriteLiteral("\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Gebruiker</th>\r\n");
                EndContext();
#line 61 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                     foreach (Question question in pageView.Questions)
                                    {

#line default
#line hidden
                BeginContext(2380, 43, true);
                WriteLiteral("                                        <th");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 2423, "\"", 2449, 2);
                WriteAttributeValue("", 2431, "cell", 2431, 4, true);
#line 63 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 2435, question.Id, 2435, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2450, 24, true);
                WriteLiteral(" style=\"display: none;\">");
                EndContext();
                BeginContext(2475, 14, false);
#line 63 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                         Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(2489, 7, true);
                WriteLiteral("</th>\r\n");
                EndContext();
#line 64 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                    }

#line default
#line hidden
                BeginContext(2535, 39, true);
                WriteLiteral("                                </tr>\r\n");
                EndContext();
#line 66 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 foreach (Answer asnwer in pageView.Questions[0].Answers)
                                {
                                    Respondant respondant = asnwer.Respondant;

#line default
#line hidden
                BeginContext(2780, 65, true);
                WriteLiteral("                                    <tr style=\"display: none;\">\r\n");
                EndContext();
#line 70 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                         if (Model.Pages.First() == pageView)
                                        {

#line default
#line hidden
                BeginContext(2967, 47, true);
                WriteLiteral("                                            <td");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 3014, "\"", 3059, 1);
#line 72 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 3022, asnwer.Respondant.Profile.ToString(), 3022, 37, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(3060, 34, true);
                WriteLiteral(" style=\"border: 1px solid black;\">");
                EndContext();
                BeginContext(3095, 27, false);
#line 72 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                                                          Write(asnwer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(3122, 7, true);
                WriteLiteral("</td>\r\n");
                EndContext();
#line 73 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                        }

#line default
#line hidden
                BeginContext(3172, 40, true);
                WriteLiteral("                                        ");
                EndContext();
#line 74 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                         foreach (Question question in pageView.Questions)
                                        {
                                            foreach (Answer answer in question.Answers)
                                            {
                                                if (answer.Respondant.SessionId == respondant.SessionId)
                                                {


#line default
#line hidden
                BeginContext(3602, 55, true);
                WriteLiteral("                                                    <td");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 3657, "\"", 3683, 2);
                WriteAttributeValue("", 3665, "cell", 3665, 4, true);
#line 81 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 3669, question.Id, 3669, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(3684, 50, true);
                WriteLiteral(" style=\"display:none; border: 1px solid black;\">\r\n");
                EndContext();
#line 82 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                         switch (question.Type)
                                                        {
                                                            case TypeEnum.NummerVraag:
                                                                var number = answer as NumberAnswer;
                                                                

#line default
#line hidden
                BeginContext(4129, 18, false);
#line 86 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(number.NumberValue);

#line default
#line hidden
                EndContext();
#line 86 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                   
                                                                break;

                                                            case TypeEnum.SliderVraag:
                                                                var slider = answer as NumberAnswer;
                                                                

#line default
#line hidden
                BeginContext(4478, 18, false);
#line 91 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(slider.NumberValue);

#line default
#line hidden
                EndContext();
#line 91 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                   
                                                                break;

                                                            case TypeEnum.GeoVraag:

#line default
#line hidden
                BeginContext(4657, 80, true);
                WriteLiteral("                                                                <p>Zie Map</p>\r\n");
                EndContext();
#line 96 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                break;

                                                            case TypeEnum.OpenVraag:
                                                                var open = answer as TextAnswer;
                                                                

#line default
#line hidden
                BeginContext(5060, 14, false);
#line 100 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(open.TextValue);

#line default
#line hidden
                EndContext();
#line 100 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                               
                                                                break;

                                                            case TypeEnum.MeerkeuzeVraag:
                                                                var multipleChoiceAnswer = answer as MultipleChoiceAnswer;
                                                                

#line default
#line hidden
                BeginContext(5430, 31, false);
#line 105 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(multipleChoiceAnswer.ToString());

#line default
#line hidden
                EndContext();
#line 105 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                                ;
                                                                break;
                                                        }

#line default
#line hidden
                BeginContext(5595, 59, true);
                WriteLiteral("                                                    </td>\r\n");
                EndContext();
#line 109 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                }
                                            }
                                        }

#line default
#line hidden
                BeginContext(5795, 43, true);
                WriteLiteral("                                    </tr>\r\n");
                EndContext();
#line 113 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                }

#line default
#line hidden
                BeginContext(5873, 38, true);
                WriteLiteral("                            </table>\r\n");
                EndContext();
#line 115 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                        }
                        else
                        {

#line default
#line hidden
                BeginContext(5995, 34, true);
                WriteLiteral("                            <table");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 6029, "\"", 6046, 1);
#line 118 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 6034, pageView.Id, 6034, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(6047, 169, true);
                WriteLiteral(" style=\"float: left; border: 1px solid black;\">\r\n                                <tr>\r\n                                    <th>\r\n                                        ");
                EndContext();
                BeginContext(6217, 14, false);
#line 121 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                   Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(6231, 122, true);
                WriteLiteral("\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n");
                EndContext();
#line 125 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                     foreach (Question question in pageView.Questions)
                                    {

#line default
#line hidden
                BeginContext(6480, 43, true);
                WriteLiteral("                                        <th");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 6523, "\"", 6549, 2);
                WriteAttributeValue("", 6531, "cell", 6531, 4, true);
#line 127 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 6535, question.Id, 6535, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(6550, 24, true);
                WriteLiteral(" style=\"display: none;\">");
                EndContext();
                BeginContext(6575, 14, false);
#line 127 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                         Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(6589, 7, true);
                WriteLiteral("</th>\r\n");
                EndContext();
#line 128 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                    }

#line default
#line hidden
                BeginContext(6635, 39, true);
                WriteLiteral("                                </tr>\r\n");
                EndContext();
#line 130 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 foreach (Answer asnwer in pageView.Questions[0].Answers)
                                {
                                    Respondant respondant = asnwer.Respondant;

#line default
#line hidden
                BeginContext(6880, 42, true);
                WriteLiteral("                                    <tr>\r\n");
                EndContext();
#line 134 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                         if (Model.Pages.First() == pageView)
                                        {

#line default
#line hidden
                BeginContext(7044, 81, true);
                WriteLiteral("                                            <td style=\"border: 1px solid black;\">");
                EndContext();
                BeginContext(7126, 27, false);
#line 136 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                            Write(asnwer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(7153, 7, true);
                WriteLiteral("</td>\r\n");
                EndContext();
#line 137 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                        }

#line default
#line hidden
                BeginContext(7203, 40, true);
                WriteLiteral("                                        ");
                EndContext();
#line 138 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                         foreach (Question question in pageView.Questions)
                                        {
                                            foreach (Answer answer in question.Answers)
                                            {
                                                if (answer.Respondant.SessionId == respondant.SessionId)
                                                {

#line default
#line hidden
                BeginContext(7631, 55, true);
                WriteLiteral("                                                    <td");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 7686, "\"", 7712, 2);
                WriteAttributeValue("", 7694, "cell", 7694, 4, true);
#line 144 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 7698, question.Id, 7698, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(7713, 50, true);
                WriteLiteral(" style=\"display:none; border: 1px solid black;\">\r\n");
                EndContext();
#line 145 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                         switch (question.Type)
                                                        {
                                                            case TypeEnum.NummerVraag:
                                                                var number = answer as NumberAnswer;
                                                                

#line default
#line hidden
                BeginContext(8158, 18, false);
#line 149 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(number.NumberValue);

#line default
#line hidden
                EndContext();
#line 149 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                   
                                                                break;

                                                            case TypeEnum.SliderVraag:
                                                                var slider = answer as NumberAnswer;
                                                                

#line default
#line hidden
                BeginContext(8507, 18, false);
#line 154 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(slider.NumberValue);

#line default
#line hidden
                EndContext();
#line 154 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                   
                                                                break;

                                                            case TypeEnum.GeoVraag:
                                                                

#line default
#line hidden
                BeginContext(8756, 7, true);
                WriteLiteral("Zie Map");
                EndContext();
#line 158 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                    
                                                                break;

                                                            case TypeEnum.OpenVraag:
                                                                var open = answer as TextAnswer;
                                                                

#line default
#line hidden
                BeginContext(9095, 14, false);
#line 163 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(open.TextValue);

#line default
#line hidden
                EndContext();
#line 163 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                               
                                                                break;

                                                            case TypeEnum.MeerkeuzeVraag:
                                                                var multipleChoiceAnswer = answer as MultipleChoiceAnswer;
                                                                

#line default
#line hidden
                BeginContext(9465, 31, false);
#line 168 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(multipleChoiceAnswer.ToString());

#line default
#line hidden
                EndContext();
#line 168 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                                ;
                                                                break;
                                                        }

#line default
#line hidden
                BeginContext(9630, 59, true);
                WriteLiteral("                                                    </td>\r\n");
                EndContext();
#line 172 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                }
                                            }
                                        }

#line default
#line hidden
                BeginContext(9830, 43, true);
                WriteLiteral("                                    </tr>\r\n");
                EndContext();
#line 176 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                }

#line default
#line hidden
                BeginContext(9908, 38, true);
                WriteLiteral("                            </table>\r\n");
                EndContext();
#line 178 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                        }
                    }

#line default
#line hidden
                BeginContext(9996, 127, true);
                WriteLiteral("                </div>\r\n            </div>\r\n            <div class=\"col-3\">\r\n                <div style=\"margin-left: 10px;\">\r\n");
                EndContext();
#line 184 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                      string[] colors = { "blue", "gold", "red", "green", "orange", "yellow", "violet", "grey", "black" };

#line default
#line hidden
                BeginContext(10248, 174, true);
                WriteLiteral("                    <script>\r\n                        var allGeoArray = [];\r\n                    </script>\r\n                    <h3>Profielen</h3>\r\n                    <dl>\r\n");
                EndContext();
#line 190 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                         foreach (string profileName in Enum.GetNames(typeof(ProfileEnum)))
                        {

#line default
#line hidden
                BeginContext(10542, 104, true);
                WriteLiteral("                            <dd>\r\n                                <input type=\"checkbox\" class=\"profile\"");
                EndContext();
                BeginWriteAttribute("name", " name=\"", 10646, "\"", 10665, 1);
#line 193 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 10653, profileName, 10653, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("value", " value=\"", 10666, "\"", 10686, 1);
#line 193 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 10674, profileName, 10674, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(10687, 41, true);
                WriteLiteral(">\r\n                                <label");
                EndContext();
                BeginWriteAttribute("for", " for=\"", 10728, "\"", 10746, 1);
#line 194 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 10734, profileName, 10734, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(10747, 2, true);
                WriteLiteral("> ");
                EndContext();
                BeginContext(10750, 11, false);
#line 194 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                      Write(profileName);

#line default
#line hidden
                EndContext();
                BeginContext(10761, 49, true);
                WriteLiteral("</label>\r\n                                <button");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 10810, "\"", 10827, 1);
#line 195 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 10815, profileName, 10815, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(10828, 115, true);
                WriteLiteral(" type=\"button\" class=\"btn btn-warning btn-sm profileLabel\">Gemiddelde</button>\r\n                            </dd>\r\n");
                EndContext();
#line 197 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                        }

#line default
#line hidden
                BeginContext(10970, 27, true);
                WriteLiteral("                    </dl>\r\n");
                EndContext();
#line 199 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                     foreach (Page pageView in Model.Pages)
                    {

#line default
#line hidden
                BeginContext(11081, 28, true);
                WriteLiteral("                        <h3>");
                EndContext();
                BeginContext(11110, 14, false);
#line 201 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                       Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(11124, 37, true);
                WriteLiteral("</h3>\r\n                        <dl>\r\n");
                EndContext();
#line 203 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                             foreach (Question question in pageView.Questions)
                            {

#line default
#line hidden
                BeginContext(11272, 96, true);
                WriteLiteral("                                <dd>\r\n                                    <input type=\"checkbox\"");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 11368, "\"", 11385, 1);
#line 206 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 11373, question.Id, 11373, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("name", " name=\"", 11386, "\"", 11418, 1);
#line 206 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 11393, question.Type.ToString(), 11393, 25, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("value", " value=\"", 11419, "\"", 11442, 1);
#line 206 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 11427, question.Value, 11427, 15, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(11443, 45, true);
                WriteLiteral(">\r\n                                    <label");
                EndContext();
                BeginWriteAttribute("for", " for=\"", 11488, "\"", 11506, 1);
#line 207 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 11494, question.Id, 11494, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(11507, 2, true);
                WriteLiteral("> ");
                EndContext();
                BeginContext(11510, 14, false);
#line 207 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                          Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(11524, 49, true);
                WriteLiteral("</label>\r\n                                </dd>\r\n");
                EndContext();
#line 209 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                if (question.Type == TypeEnum.GeoVraag)
                                {
                                    int colorNumber = new Random().Next(0, colors.Length);
                                    var geoQuestion = question as GeoQuestion;

#line default
#line hidden
                BeginContext(11853, 98, true);
                WriteLiteral("                                    <script>\r\n                                        var geoArray");
                EndContext();
                BeginContext(11953, 11, false);
#line 214 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(11965, 55, true);
                WriteLiteral(" = [];\r\n                                    </script>\r\n");
                EndContext();
#line 216 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                    foreach (Answer answer in question.Answers)
                                    {
                                        var geoAnswer = answer as GeoAnswer;
                                        switch (geoQuestion.TypeOfMarker)
                                        {
                                            case GeoTypeEnum.Marker:

#line default
#line hidden
                BeginContext(12406, 206, true);
                WriteLiteral("                                                <script>\r\n                                                    $(document).ready(function() {\r\n                                                        var icon");
                EndContext();
                BeginContext(12614, 11, false);
#line 224 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                            Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(12626, 305, true);
                WriteLiteral(@" = new L.Icon({
                                                            iconUrl:
                                                                'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-' +
                                                                    """);
                EndContext();
                BeginContext(12932, 19, false);
#line 227 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                Write(colors[colorNumber]);

#line default
#line hidden
                EndContext();
                BeginContext(12951, 769, true);
                WriteLiteral(@""" +
                                                                    '.png',
                                                            shadowUrl:
                                                                'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                                                            iconSize: [25, 41],
                                                            iconAnchor: [12, 41],
                                                            popupAnchor: [1, -34],
                                                            shadowSize: [41, 41]
                                                        });
                                                        var marker = L.marker(");
                EndContext();
                BeginContext(13721, 17, false);
#line 236 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                         Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(13738, 75, true);
                WriteLiteral(",\r\n                                                            { icon: icon");
                EndContext();
                BeginContext(13815, 11, false);
#line 237 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                    Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(13827, 171, true);
                WriteLiteral(" }).on(\'click\',\r\n                                                            function(e) {\r\n                                                                highlightUser(\"");
                EndContext();
                BeginContext(14000, 27, false);
#line 239 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(14028, 233, true);
                WriteLiteral("\");\r\n                                                            });\r\n                                                        marker.properties = {};\r\n                                                        marker.properties.myId = \"");
                EndContext();
                BeginContext(14263, 27, false);
#line 242 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                              Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(14291, 68, true);
                WriteLiteral("\";\r\n                                                        geoArray");
                EndContext();
                BeginContext(14361, 11, false);
#line 243 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                            Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(14373, 84, true);
                WriteLiteral(".push(marker);\r\n                                                        allGeoArray[");
                EndContext();
                BeginContext(14459, 11, false);
#line 244 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(14471, 12, true);
                WriteLiteral("] = geoArray");
                EndContext();
                BeginContext(14485, 11, false);
#line 244 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                          Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(14497, 69, true);
                WriteLiteral(";\r\n                                                        $(\"td.cell");
                EndContext();
                BeginContext(14568, 11, false);
#line 245 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                              Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(14580, 17, true);
                WriteLiteral("\").text(\"Marker: ");
                EndContext();
                BeginContext(14598, 19, false);
#line 245 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                            Write(colors[colorNumber]);

#line default
#line hidden
                EndContext();
                BeginContext(14617, 124, true);
                WriteLiteral("\"+\"\");\r\n                                                    });\r\n                                                </script>\r\n");
                EndContext();
#line 248 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                break;

                                            case GeoTypeEnum.Vlak:

#line default
#line hidden
                BeginContext(14867, 222, true);
                WriteLiteral("                                                <script>\r\n                                                    $(document).ready(function() {\r\n                                                        var polygon = L.polygon(");
                EndContext();
                BeginContext(15090, 17, false);
#line 253 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(15107, 169, true);
                WriteLiteral(").on(\'click\',\r\n                                                            function(e) {\r\n                                                                highlightUser(\"");
                EndContext();
                BeginContext(15278, 27, false);
#line 255 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(15306, 214, true);
                WriteLiteral("\");\r\n                                                            });\r\n                                                        polygon.setStyle({\r\n                                                            color: \"");
                EndContext();
                BeginContext(15521, 19, false);
#line 258 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                               Write(colors[colorNumber]);

#line default
#line hidden
                EndContext();
                BeginContext(15540, 229, true);
                WriteLiteral("\"\r\n                                                        });\r\n                                                        polygon.properties = {};\r\n                                                        polygon.properties.myId = \"");
                EndContext();
                BeginContext(15771, 27, false);
#line 261 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                               Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(15799, 68, true);
                WriteLiteral("\";\r\n                                                        geoArray");
                EndContext();
                BeginContext(15869, 11, false);
#line 262 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                            Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(15881, 85, true);
                WriteLiteral(".push(polygon);\r\n                                                        allGeoArray[");
                EndContext();
                BeginContext(15968, 11, false);
#line 263 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(15980, 12, true);
                WriteLiteral("] = geoArray");
                EndContext();
                BeginContext(15994, 11, false);
#line 263 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                          Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(16006, 69, true);
                WriteLiteral(";\r\n                                                        $(\"td.cell");
                EndContext();
                BeginContext(16077, 11, false);
#line 264 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                              Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(16089, 15, true);
                WriteLiteral("\").text(\"Vlak: ");
                EndContext();
                BeginContext(16105, 19, false);
#line 264 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                          Write(colors[colorNumber]);

#line default
#line hidden
                EndContext();
                BeginContext(16124, 121, true);
                WriteLiteral("\");\r\n                                                    });\r\n                                                </script>\r\n");
                EndContext();
#line 267 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                break;

                                            case GeoTypeEnum.Lijn:

#line default
#line hidden
                BeginContext(16371, 224, true);
                WriteLiteral("                                                <script>\r\n                                                    $(document).ready(function() {\r\n                                                        var polyline = L.polyline(");
                EndContext();
                BeginContext(16596, 17, false);
#line 272 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                             Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(16613, 169, true);
                WriteLiteral(").on(\'click\',\r\n                                                            function(e) {\r\n                                                                highlightUser(\"");
                EndContext();
                BeginContext(16784, 27, false);
#line 274 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(16812, 215, true);
                WriteLiteral("\");\r\n                                                            });\r\n                                                        polyline.setStyle({\r\n                                                            color: \"");
                EndContext();
                BeginContext(17028, 19, false);
#line 277 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                               Write(colors[colorNumber]);

#line default
#line hidden
                EndContext();
                BeginContext(17047, 231, true);
                WriteLiteral("\"\r\n                                                        });\r\n                                                        polyline.properties = {};\r\n                                                        polyline.properties.myId = \"");
                EndContext();
                BeginContext(17280, 27, false);
#line 280 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(17308, 68, true);
                WriteLiteral("\";\r\n                                                        geoArray");
                EndContext();
                BeginContext(17378, 11, false);
#line 281 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                            Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(17390, 86, true);
                WriteLiteral(".push(polyline);\r\n                                                        allGeoArray[");
                EndContext();
                BeginContext(17478, 11, false);
#line 282 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(17490, 12, true);
                WriteLiteral("] = geoArray");
                EndContext();
                BeginContext(17504, 11, false);
#line 282 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                          Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(17516, 69, true);
                WriteLiteral(";\r\n                                                        $(\"td.cell");
                EndContext();
                BeginContext(17587, 11, false);
#line 283 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                              Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(17599, 15, true);
                WriteLiteral("\").text(\"Lijn: ");
                EndContext();
                BeginContext(17615, 19, false);
#line 283 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                          Write(colors[colorNumber]);

#line default
#line hidden
                EndContext();
                BeginContext(17634, 121, true);
                WriteLiteral("\");\r\n                                                    });\r\n                                                </script>\r\n");
                EndContext();
#line 286 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                break;
                                        }
                                    }
                                }

                            }

#line default
#line hidden
                BeginContext(17961, 31, true);
                WriteLiteral("                        </dl>\r\n");
                EndContext();
#line 293 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"

                    }

#line default
#line hidden
                BeginContext(18017, 2135, true);
                WriteLiteral(@"                </div>
            </div>
        </div>
        
        <!-- Modal -->
        <div class=""modal fade"" id=""profileModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog modal-lg"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h4 class=""modal-title"" id=""profileModalTitle""> Profiel Titel </h4>
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">&times;</span></button>
                    </div>
                    <div class=""modal-body"" id=""profileModalBody"">
                    </div>
                </div>
            </div>
        </div>
       
    </div>

<script>
    var map = L.map('map').setView([51.47358, 5.453167], 13);
    var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attri");
                WriteLiteral(@"bution: '&copy; <a href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'
    }).addTo(map);

    $('input[type=""checkbox""]').change(function (event) {
        var questionId = $(this).attr('id');
        var type = $(this).attr('name');
        if (type == ""GeoVraag"") {
            if ($(this).is("":checked"")) {
                window[""geoArray"" + questionId].forEach(addLayer);
                $('.cell' + questionId).show();
            } else {
                window[""geoArray"" + questionId].forEach(removelayer);
                $('.cell' + questionId).hide();
            }
        } else {
            if ($(this).is("":checked"")) {
                $('.cell' + questionId).show();
            } else {
                $('.cell' + questionId).hide();
            }
        }
    });

    $("".profileLabel"").click(function () {
        var str = $(""#title"").text();
        var lastIndex = str.lastIndexOf("" "");
        str = str.substring(0, lastIndex);
        var ");
                WriteLiteral("profileString = $(this).attr(\'id\');\r\n        $.ajax({ cache: false,\r\n            url: \"");
                EndContext();
                BeginContext(20153, 41, false);
#line 348 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
             Write(Url.Action("ProfileAverage", "Dashboard"));

#line default
#line hidden
                EndContext();
                BeginContext(20194, 2896, true);
                WriteLiteral(@""",
            data: {
                ""surveyTitle"": str,
                ""profileString"": profileString
            },
            success: function (data) {
                $(""#profileModalTitle"").text(profileString + "" Gemiddelde"");
                $(""#profileModalBody"").html(data);
                $(""#profileModal"").modal('show');
            },
            error:function (xhr, ajaxOptions, thrownError){
                if(xhr.status==404) {
                    alert(""Helaas, zijn er geen resulaten bekend. Of er iets kapot...."");
                }
            }
        });
    });

    $('input.profile[type=checkbox]').change(function (event) {
        var profile = $(this).attr('value');
        var checkbox = $(this);
        var rowIndex;
        var cell;
        $(""td."" + profile).each(function (index) {
            rowIndex = $(this).parent().index();
            cell = $(this);
            $('tr').each(function () {
                if ($(this).index() == rowIndex) {
   ");
                WriteLiteral(@"                 if ($(checkbox).is("":checked"")) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                }
            });

            allGeoArray.forEach(function (item, index) {
                item.forEach(function (itemSecond, indexSecond) {
                    console.log($(cell));
                    console.log($(cell).text());
                    if ($(cell).text() == itemSecond.properties.myId)
                    {
                        if ($(checkbox).is("":checked"")) {
                            map.addLayer(itemSecond);
                        } else {
                            map.removeLayer(itemSecond);
                        }
                    }
                });
            });

        });

    });

    function highlightUser(sessionId) {
        var rowIndex = 0;
        $('#first tr').each(function() {
            var respondantId = $(this).find(""td"").eq(0)");
                WriteLiteral(@".text();
            if (respondantId == sessionId) {
                rowIndex = $(this).index();
            }
        });
                                                            
        $('tr').each(function () {
            if ($(this).index() == rowIndex) {
                $(this).css(""backgroundColor"", ""yellow"");
                $(this).insertAfter($(this).parent().parent().find('tr').eq(1));
            } else {
                $(this).css(""backgroundColor"", ""transparent"");
            }
        });
    }


    $('td, th').click(function() {
        alert($(this).text());
    });
        

    function removelayer(layer, index) {
        map.removeLayer(layer);
    }

    function addLayer(layer, index) {
        console.log(layer.properties.myId);
        map.addLayer(layer);
    }
</script>

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(23097, 13, true);
            WriteLiteral("\r\n</html>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DataModels.Survey> Html { get; private set; }
    }
}
#pragma warning restore 1591
