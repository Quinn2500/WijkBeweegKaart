#pragma checksum "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e5d234616be9ef0ba4dc9e40cf78b1c8f0e8f7bc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_AnalyseGeoAnswers), @"mvc.1.0.view", @"/Views/Dashboard/AnalyseGeoAnswers.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/AnalyseGeoAnswers.cshtml", typeof(AspNetCore.Views_Dashboard_AnalyseGeoAnswers))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK;

#line default
#line hidden
#line 2 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\_ViewImports.cshtml"
using WBK.Models;

#line default
#line hidden
#line 7 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels;

#line default
#line hidden
#line 8 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels.Answers;

#line default
#line hidden
#line 9 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
using DataModels.Questions;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e5d234616be9ef0ba4dc9e40cf78b1c8f0e8f7bc", @"/Views/Dashboard/AnalyseGeoAnswers.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d0bc4e9b17a8b143e226c8e7b1c445550acc752", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_AnalyseGeoAnswers : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DataModels.Survey>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jqeury-ui/jquery-ui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/css/bootstrap.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", "~/css/site.css", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("include", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/WijkBeweegKaart Logo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("WijkBeweegKaart"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height: 80px; width: 360px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("p-0"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("overflow: hidden;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
  
    ViewData["Title"] = "AllAnswers";
    Layout = null;

#line default
#line hidden
            BeginContext(68, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(171, 27, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(198, 796, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1c44e77570f4c88b596c83c34f0798c", async() => {
                BeginContext(204, 318, true);
                WriteLiteral(@"
    <meta charset=""utf-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <title>WijkBeweegKaart</title>

    <link rel=""stylesheet"" href=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"" />
    <script src=""https://unpkg.com/leaflet@1.6.0/dist/leaflet.js""></script>

    ");
                EndContext();
                BeginContext(522, 51, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "db94db4cb891498a948fa0a0e1240b09", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(573, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(579, 62, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0eeb407d30854c6e9a720cca03c0fdec", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(641, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(647, 56, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "470be0af2dd9466892fa4039ace5477c", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(703, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(709, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "94c3ec9351694606b04549c16ac71023", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(780, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(786, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6ea3aac5717a4848825494f7fce6ec0d", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(833, 12, true);
                WriteLiteral("\r\n    \r\n    ");
                EndContext();
                BeginContext(845, 138, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "60dc9ae6142d41f2a2182d7c08d48527", async() => {
                    BeginContext(880, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(890, 73, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6ffa4f299f9e4d47bedce4c957ee1441", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_6.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
#line 29 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(963, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Include = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(983, 4, true);
                WriteLiteral("\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(994, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(998, 13687, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e21111f8e02c4b16954681ec2df07904", async() => {
                BeginContext(1042, 131, true);
                WriteLiteral("\r\n    <nav class=\"navbar navbar-light\" style=\"background-color: #F9A11B;\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n            ");
                EndContext();
                BeginContext(1173, 105, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "5b612ee4dec34ffe9ff56c02c1b4e2f3", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1278, 81, true);
                WriteLiteral("\r\n        </a>\r\n    </nav>\r\n\r\n    <div class=\"container-fluid p-0\">\r\n        <h1>");
                EndContext();
                BeginContext(1360, 11, false);
#line 42 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
       Write(Model.Title);

#line default
#line hidden
                EndContext();
                BeginContext(1371, 180, true);
                WriteLiteral("</h1>\r\n\r\n        <div class=\"row\">\r\n            <div id=\"map\" style=\"width: 1500px; height: 600px; float: left;\"></div>\r\n            <div style=\"float: left; margin-left: 10px;\">\r\n");
                EndContext();
#line 47 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                 foreach (Page pageView in Model.Pages)
                {

#line default
#line hidden
                BeginContext(1627, 24, true);
                WriteLiteral("                    <h3>");
                EndContext();
                BeginContext(1652, 14, false);
#line 49 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                   Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(1666, 33, true);
                WriteLiteral("</h3>\r\n                    <dl>\r\n");
                EndContext();
#line 51 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                         foreach (Question question in pageView.Questions)
                        {

#line default
#line hidden
                BeginContext(1802, 88, true);
                WriteLiteral("                            <dd>\r\n                                <input type=\"checkbox\"");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 1890, "\"", 1907, 1);
#line 54 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 1895, question.Id, 1895, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("name", " name=\"", 1908, "\"", 1940, 1);
#line 54 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 1915, question.Type.ToString(), 1915, 25, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginWriteAttribute("value", " value=\"", 1941, "\"", 1964, 1);
#line 54 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 1949, question.Value, 1949, 15, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(1965, 41, true);
                WriteLiteral(">\r\n                                <label");
                EndContext();
                BeginWriteAttribute("for", " for=\"", 2006, "\"", 2024, 1);
#line 55 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 2012, question.Id, 2012, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2025, 2, true);
                WriteLiteral("> ");
                EndContext();
                BeginContext(2028, 14, false);
#line 55 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                      Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(2042, 45, true);
                WriteLiteral("</label>\r\n                            </dd>\r\n");
                EndContext();
#line 57 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                            if (question.Type == TypeEnum.GeoVraag)
                            {
                                var geoQuestion = question as GeoQuestion;

#line default
#line hidden
                BeginContext(2263, 90, true);
                WriteLiteral("                                <script>\r\n                                    var geoArray");
                EndContext();
                BeginContext(2355, 11, false);
#line 61 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(2367, 51, true);
                WriteLiteral(" = [];\r\n                                </script>\r\n");
                EndContext();
#line 63 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                foreach (Answer answer in question.Answers)
                                {
                                    var geoAnswer = answer as GeoAnswer;
                                    switch (geoQuestion.TypeOfMarker)
                                    {
                                        case GeoTypeEnum.Marker:

#line default
#line hidden
                BeginContext(2780, 209, true);
                WriteLiteral("                                            <script>\r\n                                                $(document).ready(function () {\r\n                                                    var marker = L.marker(");
                EndContext();
                BeginContext(2990, 17, false);
#line 71 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                     Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(3007, 101, true);
                WriteLiteral(").on(\'click\', function (e) {\r\n                                                        highlightUser(\"");
                EndContext();
                BeginContext(3110, 27, false);
#line 72 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                   Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(3138, 122, true);
                WriteLiteral("\");\r\n                                                    });\r\n                                                    geoArray");
                EndContext();
                BeginContext(3262, 11, false);
#line 74 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                        Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(3274, 124, true);
                WriteLiteral(".push(marker);\r\n                                                });\r\n                                            </script>\r\n");
                EndContext();
#line 77 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            break;

                                        case GeoTypeEnum.Vlak:

#line default
#line hidden
                BeginContext(3516, 207, true);
                WriteLiteral("                                            <script>\r\n                                              $(document).ready(function () {\r\n                                                  var polygon = L.polygon(");
                EndContext();
                BeginContext(3724, 17, false);
#line 82 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                     Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(3741, 99, true);
                WriteLiteral(").on(\'click\', function (e) {\r\n                                                      highlightUser(\"");
                EndContext();
                BeginContext(3842, 27, false);
#line 83 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                 Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(3870, 118, true);
                WriteLiteral("\");\r\n                                                  });\r\n                                                  geoArray");
                EndContext();
                BeginContext(3990, 11, false);
#line 85 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                      Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(4002, 123, true);
                WriteLiteral(".push(polygon);\r\n                                              });\r\n                                            </script>\r\n");
                EndContext();
#line 88 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            break;

                                        case GeoTypeEnum.Lijn:

#line default
#line hidden
                BeginContext(4243, 213, true);
                WriteLiteral("                                            <script>\r\n                                                $(document).ready(function () {\r\n                                                    var polyline = L.polyline(");
                EndContext();
                BeginContext(4457, 17, false);
#line 93 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                         Write(geoAnswer.GeoData);

#line default
#line hidden
                EndContext();
                BeginContext(4474, 101, true);
                WriteLiteral(").on(\'click\', function (e) {\r\n                                                        highlightUser(\"");
                EndContext();
                BeginContext(4577, 27, false);
#line 94 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                   Write(answer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(4605, 122, true);
                WriteLiteral("\");\r\n                                                    });\r\n                                                    geoArray");
                EndContext();
                BeginContext(4729, 11, false);
#line 96 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                        Write(question.Id);

#line default
#line hidden
                EndContext();
                BeginContext(4741, 126, true);
                WriteLiteral(".push(polyline);\r\n                                                });\r\n                                            </script>\r\n");
                EndContext();
#line 99 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            break;
                                    }
                                }
                            }
                            
                        }

#line default
#line hidden
                BeginContext(5081, 27, true);
                WriteLiteral("                    </dl>\r\n");
                EndContext();
#line 106 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"

                }

#line default
#line hidden
                BeginContext(5129, 89, true);
                WriteLiteral("            </div>\r\n        </div>\r\n\r\n        <div class=\"row\" style=\"margin-left: 0;\">\r\n");
                EndContext();
#line 112 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
             foreach (Page pageView in Model.Pages)
            {
                if (Model.Pages.First() == pageView)
                {

#line default
#line hidden
                BeginContext(5359, 169, true);
                WriteLiteral("                    <table id=\"first\" style=\"border: 1px solid black;\">\r\n                        <tr>\r\n                            <th>\r\n                                ");
                EndContext();
                BeginContext(5529, 14, false);
#line 119 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                           Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(5543, 146, true);
                WriteLiteral("\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Gebruiker</th>\r\n");
                EndContext();
#line 124 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                             foreach (Question question in pageView.Questions)
                            {

#line default
#line hidden
                BeginContext(5800, 35, true);
                WriteLiteral("                                <th");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 5835, "\"", 5862, 2);
                WriteAttributeValue("", 5843, "table", 5843, 5, true);
#line 126 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 5848, question.Id, 5848, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(5863, 1, true);
                WriteLiteral(">");
                EndContext();
                BeginContext(5865, 14, false);
#line 126 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(5879, 7, true);
                WriteLiteral("</th>\r\n");
                EndContext();
#line 127 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                            }

#line default
#line hidden
                BeginContext(5917, 31, true);
                WriteLiteral("                        </tr>\r\n");
                EndContext();
#line 129 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                         foreach (Answer asnwer in pageView.Questions[0].Answers)
                        {
                            Respondant respondant = asnwer.Respondant;

#line default
#line hidden
                BeginContext(6130, 34, true);
                WriteLiteral("                            <tr>\r\n");
                EndContext();
#line 133 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 if (Model.Pages.First() == pageView)
                                {

#line default
#line hidden
                BeginContext(6270, 73, true);
                WriteLiteral("                                    <td style=\"border: 1px solid black;\">");
                EndContext();
                BeginContext(6344, 27, false);
#line 135 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                    Write(asnwer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(6371, 7, true);
                WriteLiteral("</td>\r\n");
                EndContext();
#line 136 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                }

#line default
#line hidden
                BeginContext(6413, 32, true);
                WriteLiteral("                                ");
                EndContext();
#line 137 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 foreach (Question question in pageView.Questions)
                                {
                                    foreach (Answer answer in question.Answers)
                                    {
                                        if (answer.Respondant.SessionId == respondant.SessionId)
                                        {
                                            

#line default
#line hidden
                BeginContext(6839, 46, true);
                WriteLiteral("                                           <td");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 6885, "\"", 6912, 2);
                WriteAttributeValue("", 6893, "table", 6893, 5, true);
#line 144 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 6898, question.Id, 6898, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(6913, 36, true);
                WriteLiteral(" style=\"border: 1px solid black;\">\r\n");
                EndContext();
#line 145 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            switch (question.Type)
                                            {
                                                case TypeEnum.NummerVraag:
                                                    var number = answer as NumberAnswer;                                                  
                                                        

#line default
#line hidden
                BeginContext(7337, 18, false);
#line 149 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(number.NumberValue);

#line default
#line hidden
                EndContext();
#line 149 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           
                                                    break;

                                                case TypeEnum.SliderVraag:
                                                    var slider = answer as NumberAnswer;
                                                        

#line default
#line hidden
                BeginContext(7642, 18, false);
#line 154 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(slider.NumberValue);

#line default
#line hidden
                EndContext();
#line 154 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           
                                                    break;

                                                case TypeEnum.GeoVraag:

#line default
#line hidden
                BeginContext(7797, 69, true);
                WriteLiteral("                                                     <p>Zie Map</p>\r\n");
                EndContext();
#line 159 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                    break;

                                                case TypeEnum.OpenVraag:
                                                    var open = answer as TextAnswer;
                                                        

#line default
#line hidden
                BeginContext(8145, 14, false);
#line 163 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(open.TextValue);

#line default
#line hidden
                EndContext();
#line 163 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                          
                                                    break;

                                                case TypeEnum.MeerkeuzeVraag:
                                                    var multipleChoiceAnswer = answer as MultipleChoiceAnswer;
                                                        

#line default
#line hidden
                BeginContext(8474, 76, false);
#line 168 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(string.Join(" ", multipleChoiceAnswer.AnsweredOptions.Select(t => t.Answer)));

#line default
#line hidden
                EndContext();
#line 168 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                                                                     ;
                                                    break;
                                            }

#line default
#line hidden
                BeginContext(8660, 50, true);
                WriteLiteral("                                           </td>\r\n");
                EndContext();
#line 172 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                        }
                                    }
                                }

#line default
#line hidden
                BeginContext(8827, 35, true);
                WriteLiteral("                            </tr>\r\n");
                EndContext();
#line 176 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                        }

#line default
#line hidden
                BeginContext(8889, 30, true);
                WriteLiteral("                    </table>\r\n");
                EndContext();
#line 178 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                }
                else
                {

#line default
#line hidden
                BeginContext(8979, 26, true);
                WriteLiteral("                    <table");
                EndContext();
                BeginWriteAttribute("id", " id=\"", 9005, "\"", 9022, 1);
#line 181 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 9010, pageView.Id, 9010, 12, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(9023, 132, true);
                WriteLiteral(" style=\"border: 1px solid black;\">\r\n                        <tr>\r\n                            <th>\r\n                                ");
                EndContext();
                BeginContext(9156, 14, false);
#line 184 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                           Write(pageView.Title);

#line default
#line hidden
                EndContext();
                BeginContext(9170, 98, true);
                WriteLiteral("\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n");
                EndContext();
#line 188 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                             foreach (Question question in pageView.Questions)
                            {

#line default
#line hidden
                BeginContext(9379, 35, true);
                WriteLiteral("                                <th");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 9414, "\"", 9441, 2);
                WriteAttributeValue("", 9422, "table", 9422, 5, true);
#line 190 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 9427, question.Id, 9427, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(9442, 1, true);
                WriteLiteral(">");
                EndContext();
                BeginContext(9444, 14, false);
#line 190 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                           Write(question.Value);

#line default
#line hidden
                EndContext();
                BeginContext(9458, 7, true);
                WriteLiteral("</th>\r\n");
                EndContext();
#line 191 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                            }

#line default
#line hidden
                BeginContext(9496, 31, true);
                WriteLiteral("                        </tr>\r\n");
                EndContext();
#line 193 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                         foreach (Answer asnwer in pageView.Questions[0].Answers)
                        {
                            Respondant respondant = asnwer.Respondant;

#line default
#line hidden
                BeginContext(9709, 34, true);
                WriteLiteral("                            <tr>\r\n");
                EndContext();
#line 197 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 if (Model.Pages.First() == pageView)
                                {

#line default
#line hidden
                BeginContext(9849, 73, true);
                WriteLiteral("                                    <td style=\"border: 1px solid black;\">");
                EndContext();
                BeginContext(9923, 27, false);
#line 199 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                    Write(asnwer.Respondant.SessionId);

#line default
#line hidden
                EndContext();
                BeginContext(9950, 7, true);
                WriteLiteral("</td>\r\n");
                EndContext();
#line 200 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                }

#line default
#line hidden
                BeginContext(9992, 32, true);
                WriteLiteral("                                ");
                EndContext();
#line 201 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                 foreach (Question question in pageView.Questions)
                                {
                                    foreach (Answer answer in question.Answers)
                                    {
                                        if (answer.Respondant.SessionId == respondant.SessionId)
                                        {

#line default
#line hidden
                BeginContext(10372, 47, true);
                WriteLiteral("                                            <td");
                EndContext();
                BeginWriteAttribute("class", " class=\"", 10419, "\"", 10446, 2);
                WriteAttributeValue("", 10427, "table", 10427, 5, true);
#line 207 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
WriteAttributeValue("", 10432, question.Id, 10432, 14, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(10447, 36, true);
                WriteLiteral(" style=\"border: 1px solid black;\">\r\n");
                EndContext();
#line 208 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                 switch (question.Type)
                                                {
                                                    case TypeEnum.NummerVraag:
                                                        var number = answer as NumberAnswer;                                                  
                                                        

#line default
#line hidden
                BeginContext(10888, 18, false);
#line 212 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(number.NumberValue);

#line default
#line hidden
                EndContext();
#line 212 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           
                                                        break;

                                                    case TypeEnum.SliderVraag:
                                                        var slider = answer as NumberAnswer;
                                                        

#line default
#line hidden
                BeginContext(11205, 18, false);
#line 217 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(slider.NumberValue);

#line default
#line hidden
                EndContext();
#line 217 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                           
                                                        break;

                                                    case TypeEnum.GeoVraag:

#line default
#line hidden
                BeginContext(11368, 72, true);
                WriteLiteral("                                                        <p>Zie Map</p>\r\n");
                EndContext();
#line 222 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                        break;

                                                    case TypeEnum.OpenVraag:
                                                        var open = answer as TextAnswer;
                                                        

#line default
#line hidden
                BeginContext(11731, 14, false);
#line 226 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(open.TextValue);

#line default
#line hidden
                EndContext();
#line 226 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                          
                                                        break;

                                                    case TypeEnum.MeerkeuzeVraag:
                                                        var multipleChoiceAnswer = answer as MultipleChoiceAnswer;
                                                        

#line default
#line hidden
                BeginContext(12072, 76, false);
#line 231 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                   Write(string.Join(" ", multipleChoiceAnswer.AnsweredOptions.Select(t => t.Answer)));

#line default
#line hidden
                EndContext();
#line 231 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                                                                                                                     ;
                                                        break;
                                                }

#line default
#line hidden
                BeginContext(12266, 51, true);
                WriteLiteral("                                            </td>\r\n");
                EndContext();
#line 235 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                                            }
                                        }
                                    }  

#line default
#line hidden
                BeginContext(12448, 35, true);
                WriteLiteral("                            </tr>\r\n");
                EndContext();
#line 239 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                        }

#line default
#line hidden
                BeginContext(12510, 30, true);
                WriteLiteral("                    </table>\r\n");
                EndContext();
#line 241 "D:\GitKraken\Repos\WijkBeweegKaart\WBK\WBK\Views\Dashboard\AnalyseGeoAnswers.cshtml"
                }
            }

#line default
#line hidden
                BeginContext(12574, 2104, true);
                WriteLiteral(@"        </div>
    </div>

    <script>
        var map = L.map('map').setView([51.47358, 5.453167], 13);
        var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href=""https://www.openstreetmap.org/copyright"">OpenStreetMap</a> contributors'
        }).addTo(map);

        $('input[type=""checkbox""]').change(function (event) {
            var questionId = $(this).attr('id');
            var type = $(this).attr('name');
            if (type == ""GeoVraag"") {
                if ($(this).is("":checked"")) {
                    window[""geoArray"" + questionId].forEach(addLayer);
                } else {
                    window[""geoArray"" + questionId].forEach(removelayer);
                }
            } else {
                if ($(this).is("":checked"")) {
                    $('.table' + questionId).show();
                } else {
                    $('.table' + questionId).hide();
 ");
                WriteLiteral(@"               }
            }
        });

        function highlightUser(sessionId) {
            var rowIndex = 0;
            $('#first tr').each(function() {
                var respondantId = $(this).find(""td"").eq(0).html();
                if (respondantId == sessionId) {
                    rowIndex = $(this).index();
                    console.log(rowIndex);
                }
            });
                                                            
            $('tr').each(function () {
                if ($(this).index() == rowIndex) {
                    $(this).css(""backgroundColor"", ""yellow"");
                } else {
                    $(this).css(""backgroundColor"", ""transparent"");
                }

            });
        }


        $('td').click(function() {
            alert($(this).text());
        });
        

        function removelayer(layer, index) {
            map.removeLayer(layer);
        }

        function addLayer(layer, index) {
      ");
                WriteLiteral("      map.addLayer(layer);\r\n        }\r\n    </script>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14685, 13, true);
            WriteLiteral("\r\n</html>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DataModels.Survey> Html { get; private set; }
    }
}
#pragma warning restore 1591
